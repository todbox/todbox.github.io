var beepbox=function(t){"use strict";
/*!
    Copyright (C) 2020 John Nesky

    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal in
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
    */class e{}function s(t){let e=0;for(let s=0;s<t.length;s++)e+=t[s];const s=e/t.length;let i=0,n=0;for(let e=0;e<t.length;e++)i+=n,n=t[e]-s,t[e]=i;return t.push(0),new Float64Array(t)}function i(t,s=null,i=null){let r=e.chipNoises[t].samples;if(null==r){if(r=new Float32Array(e.chipNoiseLength+1),e.chipNoises[t].samples=r,0==t){let t=1;for(let s=0;s<e.chipNoiseLength;s++){r[s]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=16384),t=e}}else if(1==t)for(let t=0;t<e.chipNoiseLength;t++)r[t]=2*Math.random()-1;else if(2==t){let t=1;for(let s=0;s<e.chipNoiseLength;s++){r[s]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=32768),t=e}}else if(3==t){let t=1;for(let s=0;s<e.chipNoiseLength;s++){r[s]=2*(1&t)-1;let e=t>>1;1==(t+e&1)&&(e+=40),t=e}}else{if(4!=t)throw new Error("Unrecognized drum index: "+t);n(r,10,11,1,1,0),n(r,11,14,.6578,.6578,0),s(r,e.chipNoiseLength),i(r,1/Math.sqrt(e.chipNoiseLength))}r[e.chipNoiseLength]=r[0]}return r}function n(t,s,n,r,h,o){const a=0|Math.pow(2,s),l=Math.min(e.chipNoiseLength>>1,0|Math.pow(2,n)),c=i(0);let f=0;for(let i=a;i<l;i++){let a=r+(h-r)*(Math.log(i)/Math.LN2-s)/(n-s),l=Math.pow(2,(a-1)*e.spectrumMax+1)*a;l*=Math.pow(i/2048,o),f+=l,l*=c[i];const u=.61803398875*i*i*Math.PI*2;t[i]=Math.cos(u)*l,t[e.chipNoiseLength-i]=Math.sin(u)*l}return f}function r(t,s,i){const n=e.rhythms[s].arpeggioPatterns[t-1];return null!=n?n[i%n.length]:i%t}function h(t){const e={};for(let s=0;s<t.length;s++){const i=t[s];i.index=s,e[i.name]=i}const s=t;return s.dictionary=e,s}e.scales=h([{name:"easy :)",realName:"pentatonic major",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"easy :(",realName:"pentatonic minor",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"island :)",realName:"ryukyu",flags:[!0,!1,!1,!1,!0,!0,!1,!0,!1,!1,!1,!0]},{name:"island :(",realName:"pelog selisir",flags:[!0,!0,!1,!0,!1,!1,!1,!0,!0,!1,!1,!1]},{name:"blues :)",realName:"blues major",flags:[!0,!1,!0,!0,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"blues :(",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"normal :)",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"normal :(",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"dbl harmonic :)",realName:"double harmonic major",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"dbl harmonic :(",realName:"double harmonic minor",flags:[!0,!1,!0,!0,!1,!1,!0,!0,!0,!1,!1,!0]},{name:"strange",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"expert",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]}]),e.keys=h([{name:"C",isWhiteKey:!0,basePitch:12},{name:"C♯",isWhiteKey:!1,basePitch:13},{name:"D",isWhiteKey:!0,basePitch:14},{name:"D♯",isWhiteKey:!1,basePitch:15},{name:"E",isWhiteKey:!0,basePitch:16},{name:"F",isWhiteKey:!0,basePitch:17},{name:"F♯",isWhiteKey:!1,basePitch:18},{name:"G",isWhiteKey:!0,basePitch:19},{name:"G♯",isWhiteKey:!1,basePitch:20},{name:"A",isWhiteKey:!0,basePitch:21},{name:"A♯",isWhiteKey:!1,basePitch:22},{name:"B",isWhiteKey:!0,basePitch:23}]),e.blackKeyNameParents=[-1,1,-1,1,-1,1,-1,-1,1,-1,1,-1],e.tempoMin=30,e.tempoMax=300,e.reverbRange=4,e.beatsPerBarMin=3,e.beatsPerBarMax=16,e.barCountMin=1,e.barCountMax=128,e.instrumentsPerChannelMin=1,e.instrumentsPerChannelMax=10,e.partsPerBeat=24,e.ticksPerPart=2,e.rhythms=h([{name:"÷3 (triplets)",stepsPerBeat:3,ticksPerArpeggio:4,arpeggioPatterns:[[0],[0,0,1,1],[0,1,2,1]],roundUpThresholds:[5,12,18]},{name:"÷4 (standard)",stepsPerBeat:4,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,0,1,1],[0,1,2,1]],roundUpThresholds:[3,9,17,21]},{name:"÷6",stepsPerBeat:6,ticksPerArpeggio:4,arpeggioPatterns:[[0],[0,1],[0,1,2,1]],roundUpThresholds:null},{name:"÷8",stepsPerBeat:8,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,1],[0,1,2,1]],roundUpThresholds:null},{name:"freehand",stepsPerBeat:24,ticksPerArpeggio:3,arpeggioPatterns:[[0],[0,1],[0,1,2,1]],roundUpThresholds:null}]),e.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM"],e.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1],e.chipWaves=h([{name:"rounded",volume:.94,samples:s([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",volume:1,samples:s([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",volume:.5,samples:s([1,-1])},{name:"1/4 pulse",volume:.5,samples:s([1,-1,-1,-1])},{name:"1/8 pulse",volume:.5,samples:s([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",volume:.65,samples:s([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",volume:.5,samples:s([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",volume:.4,samples:s([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",volume:.4,samples:s([1,-1,1,-1,1,0])}]),e.chipNoises=h([{name:"retro",volume:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",volume:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",volume:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",volume:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",volume:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null}]),e.filterCutoffMaxHz=8e3,e.filterCutoffMinHz=1,e.filterMax=.95,e.filterMaxResonance=.95,e.filterCutoffRange=11,e.filterResonanceRange=8,e.transitions=h([{name:"seamless",isSeamless:!0,attackSeconds:0,releases:!1,releaseTicks:1,slides:!1,slideTicks:3},{name:"hard",isSeamless:!1,attackSeconds:0,releases:!1,releaseTicks:3,slides:!1,slideTicks:3},{name:"soft",isSeamless:!1,attackSeconds:.025,releases:!1,releaseTicks:3,slides:!1,slideTicks:3},{name:"slide",isSeamless:!0,attackSeconds:.025,releases:!1,releaseTicks:3,slides:!0,slideTicks:3},{name:"cross fade",isSeamless:!1,attackSeconds:.04,releases:!0,releaseTicks:6,slides:!1,slideTicks:3},{name:"hard fade",isSeamless:!1,attackSeconds:0,releases:!0,releaseTicks:48,slides:!1,slideTicks:3},{name:"medium fade",isSeamless:!1,attackSeconds:.0125,releases:!0,releaseTicks:72,slides:!1,slideTicks:3},{name:"soft fade",isSeamless:!1,attackSeconds:.06,releases:!0,releaseTicks:96,slides:!1,slideTicks:6}]),e.vibratos=h([{name:"none",amplitude:0,periodsSeconds:[.14],delayParts:0},{name:"light",amplitude:.15,periodsSeconds:[.14],delayParts:0},{name:"delayed",amplitude:.3,periodsSeconds:[.14],delayParts:18},{name:"heavy",amplitude:.45,periodsSeconds:[.14],delayParts:0},{name:"shaky",amplitude:.1,periodsSeconds:[.11,.17798,.33],delayParts:0}]),e.intervals=h([{name:"union",spread:0,offset:0,volume:.7,sign:1},{name:"shimmer",spread:.018,offset:0,volume:.8,sign:1},{name:"hum",spread:.045,offset:0,volume:1,sign:1},{name:"honky tonk",spread:.09,offset:0,volume:1,sign:1},{name:"dissonant",spread:.25,offset:0,volume:.9,sign:1},{name:"fifth",spread:3.5,offset:3.5,volume:.9,sign:1},{name:"octave",spread:6,offset:6,volume:.8,sign:1},{name:"bowed",spread:.02,offset:0,volume:1,sign:-1},{name:"piano",spread:.01,offset:0,volume:1,sign:.7}]),e.effectsNames=["none","reverb","chorus","chorus & reverb"],e.volumeRange=8,e.volumeLogScale=-.5,e.panCenter=4,e.panMax=2*e.panCenter,e.chords=h([{name:"harmony",harmonizes:!0,customInterval:!1,arpeggiates:!1,isCustomInterval:!1,strumParts:0},{name:"strum",harmonizes:!0,customInterval:!1,arpeggiates:!1,isCustomInterval:!1,strumParts:1},{name:"arpeggio",harmonizes:!1,customInterval:!1,arpeggiates:!0,isCustomInterval:!1,strumParts:0},{name:"custom interval",harmonizes:!0,customInterval:!0,arpeggiates:!0,isCustomInterval:!0,strumParts:0}]),e.maxChordSize=4,e.operatorCount=4,e.algorithms=h([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]}]),e.operatorCarrierInterval=[0,.04,-.073,.091],e.operatorAmplitudeMax=15,e.operatorFrequencies=h([{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1}]),e.envelopes=h([{name:"custom",type:0,speed:0},{name:"steady",type:1,speed:0},{name:"punch",type:2,speed:0},{name:"flare 1",type:3,speed:32},{name:"flare 2",type:3,speed:8},{name:"flare 3",type:3,speed:2},{name:"twang 1",type:4,speed:32},{name:"twang 2",type:4,speed:8},{name:"twang 3",type:4,speed:2},{name:"swell 1",type:5,speed:32},{name:"swell 2",type:5,speed:8},{name:"swell 3",type:5,speed:2},{name:"tremolo1",type:6,speed:4},{name:"tremolo2",type:6,speed:2},{name:"tremolo3",type:6,speed:1},{name:"tremolo4",type:7,speed:4},{name:"tremolo5",type:7,speed:2},{name:"tremolo6",type:7,speed:1},{name:"decay 1",type:8,speed:10},{name:"decay 2",type:8,speed:7},{name:"decay 3",type:8,speed:4}]),e.feedbacks=h([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]}]),e.chipNoiseLength=32768,e.spectrumBasePitch=24,e.spectrumControlPoints=30,e.spectrumControlPointsPerOctave=7,e.spectrumControlPointBits=3,e.spectrumMax=(1<<e.spectrumControlPointBits)-1,e.harmonicsControlPoints=28,e.harmonicsRendered=64,e.harmonicsControlPointBits=3,e.harmonicsMax=(1<<e.harmonicsControlPointBits)-1,e.harmonicsWavelength=2048,e.pulseWidthRange=8,e.pitchChannelCountMin=1,e.pitchChannelCountMax=6,e.noiseChannelCountMin=0,e.noiseChannelCountMax=3,e.noiseInterval=6,e.pitchesPerOctave=12,e.drumCount=12,e.pitchOctaves=7,e.windowOctaves=3,e.scrollableOctaves=e.pitchOctaves-e.windowOctaves,e.windowPitchCount=e.windowOctaves*e.pitchesPerOctave+1,e.maxPitch=e.pitchOctaves*e.pitchesPerOctave,e.maximumTonesPerChannel=2*e.maxChordSize,e.sineWaveLength=256,e.sineWaveMask=e.sineWaveLength-1,e.sineWave=function(){const t=new Float64Array(e.sineWaveLength+1);for(let s=0;s<e.sineWaveLength+1;s++)t[s]=Math.sin(s*Math.PI*2/e.sineWaveLength);return t}();var o=t&&t.t||function(t){var e="function"==typeof Symbol&&Symbol.iterator,s=e&&t[e],i=0;if(s)return s.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},a=t&&t.i||function(t,e){var s="function"==typeof Symbol&&t[Symbol.iterator];if(!s)return t;var i,n,r=s.call(t),h=[];try{for(;(void 0===e||e-- >0)&&!(i=r.next()).done;)h.push(i.value)}catch(t){n={error:t}}finally{try{i&&!i.done&&(s=r.return)&&s.call(r)}finally{if(n)throw n.error}}return h},l=t&&t.h||function(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(a(arguments[e]));return t};function c(t,e){var s,i,n,r,h,a;try{for(var f=o(e),u=f.next();!u.done;u=f.next()){var p=u.value;if(p instanceof Node)t.appendChild(p);else if("string"==typeof p)t.appendChild(document.createTextNode(p));else if("function"==typeof p)c(t,[p()]);else if(Array.isArray(p))c(t,p);else if(p&&"undefined"!=typeof Symbol&&"function"==typeof p[Symbol.iterator])c(t,l(p));else if(p&&p.constructor===Object&&t instanceof Element)try{for(var m=(n=void 0,o(Object.keys(p))),d=m.next();!d.done;d=m.next()){var y=d.value,g=p[y];if("class"===y)"string"==typeof g?t.setAttribute("class",g):Array.isArray(p)||g&&"undefined"!=typeof Symbol&&"function"==typeof g[Symbol.iterator]?t.setAttribute("class",l(g).join(" ")):console.warn("Invalid "+y+' value "'+g+'" on '+t.tagName+" element.");else if("style"===y)if(g&&g.constructor===Object)try{for(var b=(h=void 0,o(Object.keys(g))),w=b.next();!w.done;w=b.next()){var v=w.value;v in t.style?t.style[v]=g[v]:t.style.setProperty(v,g[v])}}catch(t){h={error:t}}finally{try{w&&!w.done&&(a=b.return)&&a.call(b)}finally{if(h)throw h.error}}else t.setAttribute(y,g);else"function"==typeof g?t[y]=g:"boolean"==typeof g?g?t.setAttribute(y,""):t.removeAttribute(y):t.setAttribute(y,g)}}catch(t){n={error:t}}finally{try{d&&!d.done&&(r=m.return)&&r.call(m)}finally{if(n)throw n.error}}else t.appendChild(document.createTextNode(p))}}catch(t){s={error:t}}finally{try{u&&!u.done&&(i=f.return)&&i.call(f)}finally{if(s)throw s.error}}return t}var f="http://www.w3.org/2000/svg";var u,p,m,d,y=t&&t.t||function(t){var e="function"==typeof Symbol&&Symbol.iterator,s=e&&t[e],i=0;if(s)return s.call(t);if(t&&"number"==typeof t.length)return{next:function(){return t&&i>=t.length&&(t=void 0),{value:t&&t[i++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")},g=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return document.createRange().createContextualFragment(t.join())},b=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var s=document.createDocumentFragment(),i=(new DOMParser).parseFromString('<svg xmlns="http://www.w3.org/2000/svg">'+t.join()+"</svg>","image/svg+xml").documentElement;null!==i.firstChild;)document.importNode(i.firstChild,!0),s.appendChild(i.firstChild);return s},w=function(t){g[t]=function(){for(var e=[],s=0;s<arguments.length;s++)e[s]=arguments[s];return c(document.createElement(t),e)}};try{for(var v=y("a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr".split(" ")),M=v.next();!M.done;M=v.next()){w(M.value)}}catch(t){u={error:t}}finally{try{M&&!M.done&&(p=v.return)&&p.call(v)}finally{if(u)throw u.error}}var k=function(t){if(b[t]=function(){for(var e=[],s=0;s<arguments.length;s++)e[s]=arguments[s];return c(document.createElementNS(f,t),e)},/-/.test(t)){var e=t.replace(/-/g,"_");b[e]=function(){for(var e=[],s=0;s<arguments.length;s++)e[s]=arguments[s];return c(document.createElementNS(f,t),e)}}};try{for(var x=y("a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern".split(" ")),S=x.next();!S.done;S=x.next()){k(S.value)}}catch(t){m={error:t}}finally{try{S&&!S.done&&(d=x.return)&&d.call(x)}finally{if(m)throw m.error}}class C{static getChannelColor(t,e){return e<t.pitchChannelCount?C.pitchChannels[e%C.pitchChannels.length]:C.noiseChannels[(e-t.pitchChannelCount)%C.noiseChannels.length]}static setTheme(t){this.o.textContent=this.themes[t];const e=document.querySelector("meta[name='theme-color']");null!=e&&e.setAttribute("content",getComputedStyle(document.documentElement).getPropertyValue("--ui-widget-background"))}}function P(t,e){for(let s=0;s<t.length;s++)t[s]*=e}function B(t){if(!function(t){return!(!t||t&t-1)}(t))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(t)/Math.log(2))}function E(t,e){const s=B(e);if(e<4)throw new Error("FFT array length must be at least 4.");for(let i=s-1;i>=2;i--){const s=1<<i,n=s>>1,r=s<<1,h=2*Math.PI/r,o=Math.cos(h),a=Math.sin(h),l=2*o;for(let i=0;i<e;i+=r){const e=i,r=e+n,h=e+s,c=h+n,f=h+s,u=t[e],p=t[h];t[e]=u+p,t[r]*=2,t[h]=u-p,t[c]*=2;let m=o,d=-a,y=1,g=0;for(let s=1;s<n;s++){const i=e+s,n=h-s,r=h+s,o=f-s,a=t[i],c=t[n],u=t[r],p=t[o],b=a-c,w=u+p;t[i]=a+c,t[n]=p-u,t[r]=b*m-w*d,t[o]=w*m+b*d;const v=l*m-y,M=l*d-g;y=m,g=d,m=v,d=M}}}for(let s=0;s<e;s+=4){const e=s+1,i=s+2,n=s+3,r=t[s],h=2*t[e],o=t[i],a=2*t[n],l=r+o,c=r-o;t[s]=l+h,t[e]=l-h,t[i]=c+a,t[n]=c-a}!function(t,e){const s=B(e);if(s>16)throw new Error("FFT array length must not be greater than 2^16.");const i=16-s;for(let s=0;s<e;s++){let e;if(e=(43690&s)>>1|(21845&s)<<1,e=(52428&e)>>2|(13107&e)<<2,e=(61680&e)>>4|(3855&e)<<4,e=(e>>8|(255&e)<<8)>>i,e>s){let i=t[s];t[s]=t[e],t[e]=i}}}(t,e)}C.themes={"dark classic":"\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: white;\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #999;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #444;\n\t\t\t\t\t--tonic: #864;\n\t\t\t\t\t--fifth-note: #468;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t}\n\t\t\t","light classic":"\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #685d88;\n\t\t\t\t\t--editor-background: white;\n\t\t\t\t\t--hover-preview: black;\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t\t--primary-text: black;\n\t\t\t\t\t--secondary-text: #777;\n\t\t\t\t\t--inverted-text: white;\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t\t--loop-accent: #98f;\n\t\t\t\t\t--link-accent: #74f;\n\t\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t"},C.pageMargin="var(--page-margin)",C.editorBackground="var(--editor-background)",C.hoverPreview="var(--hover-preview)",C.playhead="var(--playhead)",C.primaryText="var(--primary-text)",C.secondaryText="var(--secondary-text)",C.invertedText="var(--inverted-text)",C.textSelection="var(--text-selection)",C.boxSelectionFill="var(--box-selection-fill)",C.loopAccent="var(--loop-accent)",C.linkAccent="var(--link-accent)",C.uiWidgetBackground="var(--ui-widget-background)",C.uiWidgetFocus="var(--ui-widget-focus)",C.pitchBackground="var(--pitch-background)",C.tonic="var(--tonic)",C.fifthNote="var(--fifth-note)",C.whitePianoKey="var(--white-piano-key)",C.blackPianoKey="var(--black-piano-key)",C.pitchChannels=h([{name:"pitch1",secondaryChannel:"var(--pitch1-secondary-channel)",primaryChannel:"var(--pitch1-primary-channel)",secondaryNote:"var(--pitch1-secondary-note)",primaryNote:"var(--pitch1-primary-note)"},{name:"pitch2",secondaryChannel:"var(--pitch2-secondary-channel)",primaryChannel:"var(--pitch2-primary-channel)",secondaryNote:"var(--pitch2-secondary-note)",primaryNote:"var(--pitch2-primary-note)"},{name:"pitch3",secondaryChannel:"var(--pitch3-secondary-channel)",primaryChannel:"var(--pitch3-primary-channel)",secondaryNote:"var(--pitch3-secondary-note)",primaryNote:"var(--pitch3-primary-note)"},{name:"pitch4",secondaryChannel:"var(--pitch4-secondary-channel)",primaryChannel:"var(--pitch4-primary-channel)",secondaryNote:"var(--pitch4-secondary-note)",primaryNote:"var(--pitch4-primary-note)"},{name:"pitch5",secondaryChannel:"var(--pitch5-secondary-channel)",primaryChannel:"var(--pitch5-primary-channel)",secondaryNote:"var(--pitch5-secondary-note)",primaryNote:"var(--pitch5-primary-note)"},{name:"pitch6",secondaryChannel:"var(--pitch6-secondary-channel)",primaryChannel:"var(--pitch6-primary-channel)",secondaryNote:"var(--pitch6-secondary-note)",primaryNote:"var(--pitch6-primary-note)"}]),C.noiseChannels=h([{name:"noise1",secondaryChannel:"var(--noise1-secondary-channel)",primaryChannel:"var(--noise1-primary-channel)",secondaryNote:"var(--noise1-secondary-note)",primaryNote:"var(--noise1-primary-note)"},{name:"noise2",secondaryChannel:"var(--noise2-secondary-channel)",primaryChannel:"var(--noise2-primary-channel)",secondaryNote:"var(--noise2-secondary-note)",primaryNote:"var(--noise2-primary-note)"},{name:"noise3",secondaryChannel:"var(--noise3-secondary-channel)",primaryChannel:"var(--noise3-primary-channel)",secondaryNote:"var(--noise3-secondary-note)",primaryNote:"var(--noise3-primary-note)"}]),C.o=document.head.appendChild(g.style({type:"text/css"}));class T{constructor(){this.l=1,this.u=[void 0],this.p=0,this.m=0,this.g=0}pushFront(t){this.g>=this.l&&this.v(),this.m=this.m-1&this.p,this.u[this.m]=t,this.g++}pushBack(t){this.g>=this.l&&this.v(),this.u[this.m+this.g&this.p]=t,this.g++}popFront(){if(this.g<=0)throw new Error("No elements left to pop.");const t=this.u[this.m];return this.u[this.m]=void 0,this.m=this.m+1&this.p,this.g--,t}popBack(){if(this.g<=0)throw new Error("No elements left to pop.");this.g--;const t=this.m+this.g&this.p,e=this.u[t];return this.u[t]=void 0,e}peakFront(){if(this.g<=0)throw new Error("No elements left to pop.");return this.u[this.m]}peakBack(){if(this.g<=0)throw new Error("No elements left to pop.");return this.u[this.m+this.g-1&this.p]}count(){return this.g}set(t,e){if(t<0||t>=this.g)throw new Error("Invalid index");this.u[this.m+t&this.p]=e}get(t){if(t<0||t>=this.g)throw new Error("Invalid index");return this.u[this.m+t&this.p]}remove(t){if(t<0||t>=this.g)throw new Error("Invalid index");if(t<=this.g>>1){for(;t>0;)this.set(t,this.get(t-1)),t--;this.popFront()}else{for(t++;t<this.g;)this.set(t-1,this.get(t)),t++;this.popBack()}}v(){if(this.l>=1073741824)throw new Error("Capacity too big.");this.l=this.l<<1;const t=this.u,e=new Array(this.l),s=0|this.g,i=0|this.m;for(let n=0;n<s;n++)e[n]=t[i+n&this.p];for(let t=s;t<this.l;t++)e[t]=void 0;this.m=0,this.u=e,this.p=this.l-1}}const F=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],O=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class D{constructor(t,e,s){this.M=[],this.k=0;for(let i=e;i<s;i++){const e=O[t.charCodeAt(i)];this.M.push(e>>5&1),this.M.push(e>>4&1),this.M.push(e>>3&1),this.M.push(e>>2&1),this.M.push(e>>1&1),this.M.push(1&e)}}read(t){let e=0;for(;t>0;)e<<=1,e+=this.M[this.k++],t--;return e}readLongTail(t,e){let s=t,i=e;for(;this.M[this.k++];)s+=1<<i,i++;for(;i>0;)i--,this.M[this.k++]&&(s+=1<<i);return s}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class A{constructor(){this.S=0,this.M=[]}clear(){this.S=0}write(t,e){for(t--;t>=0;)this.M[this.S++]=e>>>t&1,t--}writeLongTail(t,e,s){if(s<t)throw new Error("value out of bounds");s-=t;let i=e;for(;s>=1<<i;)this.M[this.S++]=1,s-=1<<i,i++;for(this.M[this.S++]=0;i>0;)i--,this.M[this.S++]=s>>>i&1}writePartDuration(t){this.writeLongTail(1,3,t)}writePinCount(t){this.writeLongTail(1,0,t)}writePitchInterval(t){t<0?(this.write(1,1),this.writeLongTail(1,3,-t)):(this.write(1,0),this.writeLongTail(1,3,t))}concat(t){for(let e=0;e<t.S;e++)this.M[this.S++]=t.M[e]}encodeBase64(t){for(let e=0;e<this.S;e+=6){const s=this.M[e]<<5|this.M[e+1]<<4|this.M[e+2]<<3|this.M[e+3]<<2|this.M[e+4]<<1|this.M[e+5];t.push(F[s])}return t}lengthBase64(){return Math.ceil(this.S/6)}}function I(t,e,s){return{interval:t,time:e,volume:s}}function z(t,e,s){return s<=(e-=1)?s>=t?s:t:e}function L(t,e,s){if(t<=s&&s<=e)return s;throw new Error(`Value ${s} not in range [${t}, ${e}]`)}class N{constructor(t,e,s,i,n=!1){this.pitches=[t],this.pins=[I(0,0,i),I(0,s-e,n?0:i)],this.start=e,this.end=s}pickMainInterval(){let t=0,e=0;for(let s=1;s<this.pins.length;s++){const i=this.pins[s-1],n=this.pins[s];if(i.interval==n.interval){const s=n.time-i.time;t<s&&(t=s,e=i.interval)}}if(0==t){let t=0;for(let s=0;s<this.pins.length;s++){const i=this.pins[s];t<i.volume&&(t=i.volume,e=i.interval)}}return e}clone(){const t=new N(-1,this.start,this.end,3);t.pitches=this.pitches.concat(),t.pins=[];for(const e of this.pins)t.pins.push(I(e.interval,e.time,e.volume));return t}}class R{constructor(){this.notes=[],this.instrument=0}cloneNotes(){const t=[];for(const e of this.notes)t.push(e.clone());return t}reset(){this.notes.length=0,this.instrument=0}}class ${constructor(t){this.frequency=0,this.amplitude=0,this.envelope=0,this.reset(t)}reset(t){this.frequency=0,this.amplitude=t<=1?e.operatorAmplitudeMax:0,this.envelope=0==t?0:1}}class W{constructor(t){this.spectrum=[],this.P=null,this.T=!1,this.reset(t)}reset(t){for(let s=0;s<e.spectrumControlPoints;s++)if(t)this.spectrum[s]=Math.round(e.spectrumMax*(1/Math.sqrt(1+s/3)));else{const t=0==s||7==s||11==s||14==s||16==s||18==s||21==s||23==s||s>=25;this.spectrum[s]=t?Math.max(0,Math.round(e.spectrumMax*(1-s/30))):0}this.T=!1}markCustomWaveDirty(){this.T=!1}getCustomWave(t){if(!this.T||null==this.P){let i=e.chipNoiseLength;null!=this.P&&this.P.length==i+1||(this.P=new Float32Array(i+1));const r=this.P;for(let t=0;t<i;t++)r[t]=0;const h=14,o=.25,a=[0,1/7,Math.log(5/4)/Math.LN2,3/7,Math.log(1.5)/Math.LN2,5/7,6/7];function s(s){return t+Math.floor(s/e.spectrumControlPointsPerOctave)+a[(s+e.spectrumControlPointsPerOctave)%e.spectrumControlPointsPerOctave]}let l=1;for(let t=0;t<e.spectrumControlPoints+1;t++){const i=t<=0?0:this.spectrum[t-1],a=t>=e.spectrumControlPoints?this.spectrum[e.spectrumControlPoints-1]:this.spectrum[t],c=s(t-1);let f=s(t);t>=e.spectrumControlPoints&&(f=h+(f-h)*o),0==i&&0==a||(l+=.02*n(r,c,f,i/e.spectrumMax,a/e.spectrumMax,-.5))}this.spectrum[e.spectrumControlPoints-1]>0&&(l+=.02*n(r,h+(s(e.spectrumControlPoints)-h)*o,h,this.spectrum[e.spectrumControlPoints-1]/e.spectrumMax,0,-.5)),E(r,i),P(r,5/(Math.sqrt(i)*Math.pow(l,.75))),r[i]=r[0],this.T=!0}return this.P}}class U{constructor(){this.harmonics=[],this.P=null,this.T=!1,this.reset()}reset(){for(let t=0;t<e.harmonicsControlPoints;t++)this.harmonics[t]=0;this.harmonics[0]=e.harmonicsMax,this.harmonics[3]=e.harmonicsMax,this.harmonics[6]=e.harmonicsMax,this.T=!1}markCustomWaveDirty(){this.T=!1}getCustomWave(){if(!this.T||null==this.P){let t=e.harmonicsWavelength;const s=i(0);null!=this.P&&this.P.length==t+1||(this.P=new Float32Array(t+1));const n=this.P;for(let e=0;e<t;e++)n[e]=0;const r=-.25;let h=1;for(let i=0;i<e.harmonicsRendered;i++){const o=i+1;let a=i<e.harmonicsControlPoints?this.harmonics[i]:this.harmonics[e.harmonicsControlPoints-1];i>=e.harmonicsControlPoints&&(a*=1-(i-e.harmonicsControlPoints)/(e.harmonicsRendered-e.harmonicsControlPoints));const l=a/e.harmonicsMax;let c=Math.pow(2,a-e.harmonicsMax+1)*Math.sqrt(l);i<e.harmonicsControlPoints&&(h+=c),c*=Math.pow(o,r),c*=s[i+589],n[t-o]=c}E(n,t);const o=1/Math.pow(h,.7);let a=0,l=0;for(let t=0;t<n.length;t++)a+=l,l=n[t]*o,n[t]=a;n[t]=n[0],this.T=!0}return this.P}}class j{constructor(t){this.type=0,this.preset=0,this.chipWave=2,this.chipNoise=1,this.filterCutoff=6,this.filterResonance=0,this.filterEnvelope=1,this.transition=1,this.vibrato=0,this.interval=0,this.effects=0,this.chord=1,this.volume=0,this.pan=e.panCenter,this.pulseWidth=e.pulseWidthRange-1,this.pulseEnvelope=1,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0,this.feedbackEnvelope=1,this.operators=[],this.harmonicsWave=new U,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.spectrumWave=new W(t);for(let t=0;t<e.operatorCount;t++)this.operators[t]=new $(t);for(let t=0;t<e.drumCount;t++)this.drumsetEnvelopes[t]=e.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[t]=new W(!0)}setTypeAndReset(t,s){switch(this.type=t,this.preset=t,this.volume=0,this.pan=e.panCenter,t){case 0:this.chipWave=2,this.filterCutoff=6,this.filterResonance=0,this.filterEnvelope=e.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2;break;case 1:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=1,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0,this.feedbackEnvelope=e.envelopes.dictionary.steady.index;for(let t=0;t<this.operators.length;t++)this.operators[t].reset(t);break;case 2:this.chipNoise=1,this.transition=1,this.effects=0,this.chord=2,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=e.envelopes.dictionary.steady.index;break;case 3:this.transition=1,this.effects=1,this.chord=0,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=e.envelopes.dictionary.steady.index,this.spectrumWave.reset(s);break;case 4:this.effects=0;for(let t=0;t<e.drumCount;t++)this.drumsetEnvelopes[t]=e.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[t].reset(s);break;case 5:this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=e.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=0,this.harmonicsWave.reset();break;case 6:this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=e.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2,this.pulseWidth=e.pulseWidthRange-1,this.pulseEnvelope=e.envelopes.dictionary["twang 2"].index;break;default:throw new Error("Unrecognized instrument type: "+t)}}toJsonObject(){const t={type:e.instrumentTypeNames[this.type],volume:20*(5-this.volume),pan:100*(this.pan-e.panCenter)/e.panCenter,effects:e.effectsNames[this.effects]};if(this.preset!=this.type&&(t.preset=this.preset),4!=this.type&&(t.transition=e.transitions[this.transition].name,t.chord=this.getChord().name,t.filterCutoffHz=Math.round(e.filterCutoffMaxHz*Math.pow(2,this.getFilterCutoffOctaves())),t.filterResonance=Math.round(100*this.filterResonance/(e.filterResonanceRange-1)),t.filterEnvelope=this.getFilterEnvelope().name),2==this.type)t.wave=e.chipNoises[this.chipNoise].name;else if(3==this.type){t.spectrum=[];for(let s=0;s<e.spectrumControlPoints;s++)t.spectrum[s]=Math.round(100*this.spectrumWave.spectrum[s]/e.spectrumMax)}else if(4==this.type){t.drums=[];for(let s=0;s<e.drumCount;s++){const i=[];for(let t=0;t<e.spectrumControlPoints;t++)i[t]=Math.round(100*this.drumsetSpectrumWaves[s].spectrum[t]/e.spectrumMax);t.drums[s]={filterEnvelope:this.getDrumsetEnvelope(s).name,spectrum:i}}}else if(0==this.type)t.wave=e.chipWaves[this.chipWave].name,t.interval=e.intervals[this.interval].name,t.vibrato=e.vibratos[this.vibrato].name;else if(6==this.type)t.pulseWidth=Math.round(50*Math.pow(.5,.5*(e.pulseWidthRange-this.pulseWidth-1))*32)/32,t.pulseEnvelope=e.envelopes[this.pulseEnvelope].name,t.vibrato=e.vibratos[this.vibrato].name;else if(5==this.type){t.interval=e.intervals[this.interval].name,t.vibrato=e.vibratos[this.vibrato].name,t.harmonics=[];for(let s=0;s<e.harmonicsControlPoints;s++)t.harmonics[s]=Math.round(100*this.harmonicsWave.harmonics[s]/e.harmonicsMax)}else{if(1!=this.type)throw new Error("Unrecognized instrument type");{const s=[];for(const t of this.operators)s.push({frequency:e.operatorFrequencies[t.frequency].name,amplitude:t.amplitude,envelope:e.envelopes[t.envelope].name});t.vibrato=e.vibratos[this.vibrato].name,t.algorithm=e.algorithms[this.algorithm].name,t.feedbackType=e.feedbacks[this.feedbackType].name,t.feedbackAmplitude=this.feedbackAmplitude,t.feedbackEnvelope=e.envelopes[this.feedbackEnvelope].name,t.operators=s}}return t}fromJsonObject(t,s){null==t&&(t={});let i=e.instrumentTypeNames.indexOf(t.type);-1==i&&(i=s?2:0),this.setTypeAndReset(i,s),null!=t.preset&&(this.preset=t.preset>>>0),null!=t.volume?this.volume=z(0,e.volumeRange,Math.round(5-(0|t.volume)/20)):this.volume=0,null!=t.pan?this.pan=z(0,e.panMax+1,Math.round(e.panCenter+(0|t.pan)*e.panCenter/100)):this.pan=e.panCenter;const n={binary:0,sudden:1,smooth:2},r=t.transition||t.envelope;if(this.transition=null!=n[r]?n[r]:e.transitions.findIndex((t=>t.name==r)),-1==this.transition&&(this.transition=1),this.effects=e.effectsNames.indexOf(t.effects),-1==this.effects&&(this.effects=2==this.type?0:1),null!=t.filterCutoffHz?this.filterCutoff=z(0,e.filterCutoffRange,Math.round(e.filterCutoffRange-1+2*Math.log((0|t.filterCutoffHz)/e.filterCutoffMaxHz)/Math.LN2)):this.filterCutoff=0==this.type?6:10,null!=t.filterResonance?this.filterResonance=z(0,e.filterResonanceRange,Math.round((e.filterResonanceRange-1)*(0|t.filterResonance)/100)):this.filterResonance=0,this.filterEnvelope=e.envelopes.findIndex((e=>e.name==t.filterEnvelope)),-1==this.filterEnvelope&&(this.filterEnvelope=e.envelopes.dictionary.steady.index),null!=t.filter){const e=[10,6,3,0,8,5,2],s=[1,1,1,1,18,19,20],i=["none","bright","medium","soft","decay bright","decay medium","decay soft"],n={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let r=null!=n[t.filter]?n[t.filter]:i.indexOf(t.filter);-1==r&&(r=0),this.filterCutoff=e[r],this.filterEnvelope=s[r],this.filterResonance=0}const h=["none","vibrato light","vibrato delayed","vibrato heavy"];if(2==this.type)this.chipNoise=e.chipNoises.findIndex((e=>e.name==t.wave)),-1==this.chipNoise&&(this.chipNoise=1),this.chord=e.chords.findIndex((e=>e.name==t.chord)),-1==this.chord&&(this.chord=2);else if(3==this.type){if(null!=t.spectrum)for(let s=0;s<e.spectrumControlPoints;s++)this.spectrumWave.spectrum[s]=Math.max(0,Math.min(e.spectrumMax,Math.round(e.spectrumMax*+t.spectrum[s]/100)));this.chord=e.chords.findIndex((e=>e.name==t.chord)),-1==this.chord&&(this.chord=0)}else if(4==this.type){if(null!=t.drums)for(let s=0;s<e.drumCount;s++){const i=t.drums[s];if(null!=i&&(null!=i.filterEnvelope&&(this.drumsetEnvelopes[s]=e.envelopes.findIndex((t=>t.name==i.filterEnvelope)),-1==this.drumsetEnvelopes[s]&&(this.drumsetEnvelopes[s]=e.envelopes.dictionary["twang 2"].index)),null!=i.spectrum))for(let t=0;t<e.spectrumControlPoints;t++)this.drumsetSpectrumWaves[s].spectrum[t]=Math.max(0,Math.min(e.spectrumMax,Math.round(e.spectrumMax*+i.spectrum[t]/100)))}}else if(5==this.type){if(null!=t.harmonics)for(let s=0;s<e.harmonicsControlPoints;s++)this.harmonicsWave.harmonics[s]=Math.max(0,Math.min(e.harmonicsMax,Math.round(e.harmonicsMax*+t.harmonics[s]/100)));null!=t.interval&&(this.interval=e.intervals.findIndex((e=>e.name==t.interval)),-1==this.interval&&(this.interval=0)),null!=t.vibrato&&(this.vibrato=e.vibratos.findIndex((e=>e.name==t.vibrato)),-1==this.vibrato&&(this.vibrato=0)),this.chord=e.chords.findIndex((e=>e.name==t.chord)),-1==this.chord&&(this.chord=0)}else if(6==this.type)null!=t.pulseWidth?this.pulseWidth=z(0,e.pulseWidthRange,Math.round(Math.log(+t.pulseWidth/50)/Math.LN2/.5-1+8)):this.pulseWidth=e.pulseWidthRange-1,null!=t.pulseEnvelope&&(this.pulseEnvelope=e.envelopes.findIndex((e=>e.name==t.pulseEnvelope)),-1==this.pulseEnvelope&&(this.pulseEnvelope=e.envelopes.dictionary.steady.index)),null!=t.vibrato&&(this.vibrato=e.vibratos.findIndex((e=>e.name==t.vibrato)),-1==this.vibrato&&(this.vibrato=0)),this.chord=e.chords.findIndex((e=>e.name==t.chord)),-1==this.chord&&(this.chord=0);else if(0==this.type){const s={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0};if(this.chipWave=null!=s[t.wave]?s[t.wave]:e.chipWaves.findIndex((e=>e.name==t.wave)),-1==this.chipWave&&(this.chipWave=1),null!=t.interval)this.interval=e.intervals.findIndex((e=>e.name==t.interval)),-1==this.interval&&(this.interval=0);else if(null!=t.chorus){const s={fifths:5,octaves:6};this.interval=null!=s[t.chorus]?s[t.chorus]:e.intervals.findIndex((e=>e.name==t.chorus)),-1==this.interval&&(this.interval=0)}null!=t.vibrato?(this.vibrato=e.vibratos.findIndex((e=>e.name==t.vibrato)),-1==this.vibrato&&(this.vibrato=0)):null!=t.effect&&(this.vibrato=h.indexOf(t.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=e.chords.findIndex((e=>e.name==t.chord)),-1==this.chord&&(this.chord=2),"custom harmony"==t.chorus&&(this.interval=2,this.chord=3)}else{if(1!=this.type)throw new Error("Unrecognized instrument type.");{null!=t.vibrato?(this.vibrato=e.vibratos.findIndex((e=>e.name==t.vibrato)),-1==this.vibrato&&(this.vibrato=0)):null!=t.effect&&(this.vibrato=h.indexOf(t.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=e.chords.findIndex((e=>e.name==t.chord)),-1==this.chord&&(this.chord=3),this.algorithm=e.algorithms.findIndex((e=>e.name==t.algorithm)),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=e.feedbacks.findIndex((e=>e.name==t.feedbackType)),-1==this.feedbackType&&(this.feedbackType=0),null!=t.feedbackAmplitude?this.feedbackAmplitude=z(0,e.operatorAmplitudeMax+1,0|t.feedbackAmplitude):this.feedbackAmplitude=0;const s={"pluck 1":6,"pluck 2":7,"pluck 3":8};this.feedbackEnvelope=null!=s[t.feedbackEnvelope]?s[t.feedbackEnvelope]:e.envelopes.findIndex((e=>e.name==t.feedbackEnvelope)),-1==this.feedbackEnvelope&&(this.feedbackEnvelope=0);for(let i=0;i<e.operatorCount;i++){const n=this.operators[i];let r=void 0;t.operators&&(r=t.operators[i]),null==r&&(r={}),n.frequency=e.operatorFrequencies.findIndex((t=>t.name==r.frequency)),-1==n.frequency&&(n.frequency=0),null!=r.amplitude?n.amplitude=z(0,e.operatorAmplitudeMax+1,0|r.amplitude):n.amplitude=0,n.envelope=null!=s[r.envelope]?s[r.envelope]:e.envelopes.findIndex((t=>t.name==r.envelope)),-1==n.envelope&&(n.envelope=0)}}}}static frequencyFromPitch(t){return 440*Math.pow(2,(t-69)/12)}static drumsetIndexReferenceDelta(t){return j.frequencyFromPitch(e.spectrumBasePitch+6*t)/44100}static O(t){return 15+Math.log(j.drumsetIndexReferenceDelta(t))/Math.LN2}warmUp(){if(2==this.type)i(this.chipNoise,E,P);else if(5==this.type)this.harmonicsWave.getCustomWave();else if(3==this.type)this.spectrumWave.getCustomWave(8);else if(4==this.type)for(let t=0;t<e.drumCount;t++)this.drumsetSpectrumWaves[t].getCustomWave(j.O(t))}getDrumWave(){if(2==this.type)return i(this.chipNoise,E,P);if(3==this.type)return this.spectrumWave.getCustomWave(8);throw new Error("Unhandled instrument type in getDrumWave")}getDrumsetWave(t){if(4==this.type)return this.drumsetSpectrumWaves[t].getCustomWave(j.O(t));throw new Error("Unhandled instrument type in getDrumWave")}getTransition(){return 4==this.type?e.transitions.dictionary["hard fade"]:e.transitions[this.transition]}getChord(){return 4==this.type?e.chords.dictionary.harmony:e.chords[this.chord]}getFilterCutoffOctaves(){return 4==this.type?0:.5*(this.filterCutoff-(e.filterCutoffRange-1))}getFilterIsFirstOrder(){return 4!=this.type&&0==this.filterResonance}getFilterResonance(){return 4==this.type?1:this.filterResonance}getFilterEnvelope(){if(4==this.type)throw new Error("Can't getFilterEnvelope() for drumset.");return e.envelopes[this.filterEnvelope]}getDrumsetEnvelope(t){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return e.envelopes[this.drumsetEnvelopes[t]]}}class K{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1}}class V{constructor(t){this.channels=[],null!=t?this.fromBase64String(t):this.initToDefault(!0)}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount}getChannelIsNoise(t){return t>=this.pitchChannelCount}initToDefault(t=!0){if(this.scale=0,this.key=0,this.loopStart=0,this.loopLength=4,this.tempo=150,this.reverb=0,this.beatsPerBar=8,this.barCount=16,this.patternsPerChannel=8,this.rhythm=1,this.instrumentsPerChannel=1,t){this.pitchChannelCount=3,this.noiseChannelCount=1;for(let t=0;t<this.getChannelCount();t++){this.channels.length<=t&&(this.channels[t]=new K);const e=this.channels[t];e.octave=3-t;for(let t=0;t<this.patternsPerChannel;t++)e.patterns.length<=t?e.patterns[t]=new R:e.patterns[t].reset();e.patterns.length=this.patternsPerChannel;const s=t>=this.pitchChannelCount;for(let t=0;t<this.instrumentsPerChannel;t++)e.instruments.length<=t&&(e.instruments[t]=new j(s)),e.instruments[t].setTypeAndReset(s?2:0,s);e.instruments.length=this.instrumentsPerChannel;for(let t=0;t<this.barCount;t++)e.bars[t]=t<4?1:0;e.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let t,s=[];s.push(F[V.I]),s.push(110,F[this.pitchChannelCount],F[this.noiseChannelCount]),s.push(115,F[this.scale]),s.push(107,F[this.key]),s.push(108,F[this.loopStart>>6],F[63&this.loopStart]),s.push(101,F[this.loopLength-1>>6],F[this.loopLength-1&63]),s.push(116,F[this.tempo>>6],F[63&this.tempo]),s.push(109,F[this.reverb]),s.push(97,F[this.beatsPerBar-1]),s.push(103,F[this.barCount-1>>6],F[this.barCount-1&63]),s.push(106,F[this.patternsPerChannel-1>>6],F[this.patternsPerChannel-1&63]),s.push(105,F[this.instrumentsPerChannel-1]),s.push(114,F[this.rhythm]),s.push(111);for(let t=0;t<this.getChannelCount();t++)s.push(F[this.channels[t].octave]);for(let t=0;t<this.getChannelCount();t++)for(let i=0;i<this.instrumentsPerChannel;i++){const n=this.channels[t].instruments[i];if(s.push(84,F[n.type]),s.push(118,F[n.volume]),s.push(76,F[n.pan]),s.push(117,F[n.preset>>6],F[63&n.preset]),s.push(113,F[n.effects]),4!=n.type&&(s.push(100,F[n.transition]),s.push(102,F[n.filterCutoff]),s.push(121,F[n.filterResonance]),s.push(122,F[n.filterEnvelope]),s.push(67,F[n.chord])),0==n.type)s.push(119,F[n.chipWave]),s.push(99,F[n.vibrato]),s.push(104,F[n.interval]);else if(1==n.type){s.push(99,F[n.vibrato]),s.push(65,F[n.algorithm]),s.push(70,F[n.feedbackType]),s.push(66,F[n.feedbackAmplitude]),s.push(86,F[n.feedbackEnvelope]),s.push(81);for(let t=0;t<e.operatorCount;t++)s.push(F[n.operators[t].frequency]);s.push(80);for(let t=0;t<e.operatorCount;t++)s.push(F[n.operators[t].amplitude]);s.push(69);for(let t=0;t<e.operatorCount;t++)s.push(F[n.operators[t].envelope])}else if(2==n.type)s.push(119,F[n.chipNoise]);else if(3==n.type){s.push(83);const t=new A;for(let s=0;s<e.spectrumControlPoints;s++)t.write(e.spectrumControlPointBits,n.spectrumWave.spectrum[s]);t.encodeBase64(s)}else if(4==n.type){s.push(122);for(let t=0;t<e.drumCount;t++)s.push(F[n.drumsetEnvelopes[t]]);s.push(83);const t=new A;for(let s=0;s<e.drumCount;s++)for(let i=0;i<e.spectrumControlPoints;i++)t.write(e.spectrumControlPointBits,n.drumsetSpectrumWaves[s].spectrum[i]);t.encodeBase64(s)}else if(5==n.type){s.push(99,F[n.vibrato]),s.push(104,F[n.interval]),s.push(72);const t=new A;for(let s=0;s<e.harmonicsControlPoints;s++)t.write(e.harmonicsControlPointBits,n.harmonicsWave.harmonics[s]);t.encodeBase64(s)}else{if(6!=n.type)throw new Error("Unknown instrument type.");s.push(99,F[n.vibrato]),s.push(87,F[n.pulseWidth],F[n.pulseEnvelope])}}s.push(98),t=new A;let i=0;for(;1<<i<this.patternsPerChannel+1;)i++;for(let e=0;e<this.getChannelCount();e++)for(let s=0;s<this.barCount;s++)t.write(i,this.channels[e].bars[s]);t.encodeBase64(s),s.push(112),t=new A;const n=new A;let r=0;for(;1<<r<this.instrumentsPerChannel;)r++;for(let s=0;s<this.getChannelCount();s++){const i=this.getChannelIsNoise(s),h=i?0:12*this.channels[s].octave;let o=(i?4:12)+h;const a=i?[4,6,7,2,3,8,0,10]:[12,19,24,31,36,7,0],l=[];for(let t=0;t<a.length;t++)a[t]+=h;for(const i of this.channels[s].patterns)if(t.write(r,i.instrument),i.notes.length>0){t.write(1,1);let s=0;for(const r of i.notes){r.start>s&&(t.write(2,0),t.writePartDuration(r.start-s)),n.clear();for(let t=1;t<r.pitches.length;t++)n.write(1,1);r.pitches.length<e.maxChordSize&&n.write(1,0),n.writePinCount(r.pins.length-1),n.write(2,r.pins[0].volume);let i=0,h=r.pitches[0],c=h;const f=[];for(let t=1;t<r.pins.length;t++){const e=r.pins[t],s=h+e.interval;c!=s?(n.write(1,1),f.push(s),c=s):n.write(1,0),n.writePartDuration(e.time-i),i=e.time,n.write(2,e.volume)}const u=String.fromCharCode.apply(null,n.encodeBase64([])),p=l.indexOf(u);-1==p?(t.write(2,1),t.concat(n)):(t.write(1,1),t.writeLongTail(0,0,p),l.splice(p,1)),l.unshift(u),l.length>10&&l.pop();const m=r.pitches.concat(f);for(let e=0;e<m.length;e++){const s=m[e],i=a.indexOf(s);if(-1==i){let e=0,i=o;if(i<s)for(;i!=s;)i++,-1==a.indexOf(i)&&e++;else for(;i!=s;)i--,-1==a.indexOf(i)&&e--;t.write(1,0),t.writePitchInterval(e)}else t.write(1,1),t.write(3,i),a.splice(i,1);a.unshift(s),a.length>8&&a.pop(),o=e==r.pitches.length-1?r.pitches[0]:s}s=r.end}s<this.beatsPerBar*e.partsPerBeat&&(t.write(2,0),t.writePartDuration(this.beatsPerBar*e.partsPerBeat-s))}else t.write(1,0)}let h=t.lengthBase64(),o=[];for(;h>0;)o.unshift(F[63&h]),h>>=6;s.push(F[o.length]),Array.prototype.push.apply(s,o),t.encodeBase64(s);const a=64e3;if(s.length<a)return String.fromCharCode.apply(null,s);{let t="";for(let e=0;e<s.length;e+=a)t+=String.fromCharCode.apply(null,s.slice(e,e+a));return t}}fromBase64String(t){if(null==t||""==t)return void this.initToDefault(!0);let s=0;for(;t.charCodeAt(s)<=32;)s++;if(35==t.charCodeAt(s)&&s++,123==t.charCodeAt(s))return void this.fromJsonObject(JSON.parse(0==s?t:t.substring(s)));const i=O[t.charCodeAt(s++)];if(-1==i||i>V.I||i<V.L)return;const n=i<3,r=i<4,h=i<5,o=i<6,a=i<7,l=i<8;if(this.initToDefault(o),n){for(const t of this.channels)t.instruments[0].transition=0;this.channels[3].instruments[0].chipNoise=0}let c,f=0,u=-1;for(;s<t.length;)switch(c=t.charCodeAt(s++)){case 110:this.pitchChannelCount=O[t.charCodeAt(s++)],this.noiseChannelCount=O[t.charCodeAt(s++)],this.pitchChannelCount=L(e.pitchChannelCountMin,e.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=L(e.noiseChannelCountMin,e.noiseChannelCountMax,this.noiseChannelCount);for(let t=this.channels.length;t<this.getChannelCount();t++)this.channels[t]=new K;this.channels.length=this.getChannelCount();break;case 115:this.scale=O[t.charCodeAt(s++)],n&&10==this.scale&&(this.scale=11);break;case 107:this.key=z(0,e.keys.length,a?11-O[t.charCodeAt(s++)]:O[t.charCodeAt(s++)]);break;case 108:this.loopStart=h?O[t.charCodeAt(s++)]:(O[t.charCodeAt(s++)]<<6)+O[t.charCodeAt(s++)];break;case 101:this.loopLength=h?O[t.charCodeAt(s++)]:(O[t.charCodeAt(s++)]<<6)+O[t.charCodeAt(s++)]+1;break;case 116:this.tempo=r?[95,120,151,190][O[t.charCodeAt(s++)]]:a?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][O[t.charCodeAt(s++)]]:O[t.charCodeAt(s++)]<<6|O[t.charCodeAt(s++)],this.tempo=z(e.tempoMin,e.tempoMax+1,this.tempo);break;case 109:this.reverb=O[t.charCodeAt(s++)],this.reverb=z(0,e.reverbRange,this.reverb);break;case 97:this.beatsPerBar=n?[6,7,8,9,10][O[t.charCodeAt(s++)]]:O[t.charCodeAt(s++)]+1,this.beatsPerBar=Math.max(e.beatsPerBarMin,Math.min(e.beatsPerBarMax,this.beatsPerBar));break;case 103:{const i=(O[t.charCodeAt(s++)]<<6)+O[t.charCodeAt(s++)]+1;this.barCount=L(e.barCountMin,e.barCountMax,i);for(let t=0;t<this.getChannelCount();t++){for(let e=this.channels[t].bars.length;e<this.barCount;e++)this.channels[t].bars[e]=1;this.channels[t].bars.length=this.barCount}}break;case 106:{let i;i=l?O[t.charCodeAt(s++)]+1:(O[t.charCodeAt(s++)]<<6)+O[t.charCodeAt(s++)]+1,this.patternsPerChannel=L(1,e.barCountMax,i);for(let t=0;t<this.getChannelCount();t++){for(let e=this.channels[t].patterns.length;e<this.patternsPerChannel;e++)this.channels[t].patterns[e]=new R;this.channels[t].patterns.length=this.patternsPerChannel}}break;case 105:{const i=O[t.charCodeAt(s++)]+1;this.instrumentsPerChannel=L(e.instrumentsPerChannelMin,e.instrumentsPerChannelMax,i);for(let t=0;t<this.getChannelCount();t++){const e=t>=this.pitchChannelCount;for(let s=this.channels[t].instruments.length;s<this.instrumentsPerChannel;s++)this.channels[t].instruments[s]=new j(e);if(this.channels[t].instruments.length=this.instrumentsPerChannel,o)for(let s=0;s<this.instrumentsPerChannel;s++)this.channels[t].instruments[s].setTypeAndReset(e?2:0,e)}}break;case 114:this.rhythm=O[t.charCodeAt(s++)];break;case 111:if(n){const i=O[t.charCodeAt(s++)];this.channels[i].octave=z(0,e.scrollableOctaves+1,O[t.charCodeAt(s++)])}else for(let i=0;i<this.getChannelCount();i++)this.channels[i].octave=z(0,e.scrollableOctaves+1,O[t.charCodeAt(s++)]);break;case 84:{u++,u>=this.instrumentsPerChannel&&(f++,u=0),L(0,this.channels.length-1,f);const e=this.channels[f].instruments[u],i=L(0,6,O[t.charCodeAt(s++)]);e.setTypeAndReset(i,f>=this.pitchChannelCount)}break;case 117:{const e=O[t.charCodeAt(s++)]<<6|O[t.charCodeAt(s++)];this.channels[f].instruments[u].preset=e}break;case 119:if(n){const i=[1,2,3,4,5,6,7,8,0],n=O[t.charCodeAt(s++)];this.channels[n].instruments[0].chipWave=z(0,e.chipWaves.length,0|i[O[t.charCodeAt(s++)]])}else if(o){const i=[1,2,3,4,5,6,7,8,0];for(let n=0;n<this.getChannelCount();n++)for(let r=0;r<this.instrumentsPerChannel;r++)n>=this.pitchChannelCount?this.channels[n].instruments[r].chipNoise=z(0,e.chipNoises.length,O[t.charCodeAt(s++)]):this.channels[n].instruments[r].chipWave=z(0,e.chipWaves.length,0|i[O[t.charCodeAt(s++)]])}else if(a){const i=[1,2,3,4,5,6,7,8,0];f>=this.pitchChannelCount?this.channels[f].instruments[u].chipNoise=z(0,e.chipNoises.length,O[t.charCodeAt(s++)]):this.channels[f].instruments[u].chipWave=z(0,e.chipWaves.length,0|i[O[t.charCodeAt(s++)]])}else f>=this.pitchChannelCount?this.channels[f].instruments[u].chipNoise=z(0,e.chipNoises.length,O[t.charCodeAt(s++)]):this.channels[f].instruments[u].chipWave=z(0,e.chipWaves.length,O[t.charCodeAt(s++)]);break;case 102:if(a){const e=[10,6,3,0,8,5,2],i=[1,1,1,1,18,19,20],r=["none","bright","medium","soft","decay bright","decay medium","decay soft"];if(n){const n=O[t.charCodeAt(s++)],h=this.channels[n].instruments[0],o=[1,3,4,5][z(0,r.length,O[t.charCodeAt(s++)])];h.filterCutoff=e[o],h.filterEnvelope=i[o],h.filterResonance=0}else if(o)for(let n=0;n<this.getChannelCount();n++)for(let h=0;h<this.instrumentsPerChannel;h++){const o=this.channels[n].instruments[h],a=z(0,r.length,O[t.charCodeAt(s++)]+1);n<this.pitchChannelCount?(o.filterCutoff=e[a],o.filterEnvelope=i[a],o.filterResonance=0):(o.filterCutoff=10,o.filterEnvelope=1,o.filterResonance=0)}else{const n=z(0,r.length,O[t.charCodeAt(s++)]),h=this.channels[f].instruments[u];h.filterCutoff=e[n],h.filterEnvelope=i[n],h.filterResonance=0}}else{this.channels[f].instruments[u].filterCutoff=z(0,e.filterCutoffRange,O[t.charCodeAt(s++)])}break;case 121:this.channels[f].instruments[u].filterResonance=z(0,e.filterResonanceRange,O[t.charCodeAt(s++)]);break;case 122:{const i=this.channels[f].instruments[u];if(4==i.type)for(let n=0;n<e.drumCount;n++)i.drumsetEnvelopes[n]=z(0,e.envelopes.length,O[t.charCodeAt(s++)]);else i.filterEnvelope=z(0,e.envelopes.length,O[t.charCodeAt(s++)])}break;case 87:{const i=this.channels[f].instruments[u];i.pulseWidth=z(0,e.pulseWidthRange,O[t.charCodeAt(s++)]),i.pulseEnvelope=z(0,e.envelopes.length,O[t.charCodeAt(s++)])}break;case 100:if(n){const i=O[t.charCodeAt(s++)];this.channels[i].instruments[0].transition=z(0,e.transitions.length,O[t.charCodeAt(s++)])}else if(o)for(let i=0;i<this.getChannelCount();i++)for(let n=0;n<this.instrumentsPerChannel;n++)this.channels[i].instruments[n].transition=z(0,e.transitions.length,O[t.charCodeAt(s++)]);else this.channels[f].instruments[u].transition=z(0,e.transitions.length,O[t.charCodeAt(s++)]);break;case 99:if(n){const e=[0,3,2,0],i=[1,1,1,13],n=O[t.charCodeAt(s++)],r=z(0,e.length,O[t.charCodeAt(s++)]),h=this.channels[n].instruments[0];h.vibrato=e[r],h.filterEnvelope=1==h.filterEnvelope?i[r]:h.filterEnvelope}else if(o){const e=[0,1,2,3,0,0],i=[1,1,1,1,16,13];for(let n=0;n<this.getChannelCount();n++)for(let r=0;r<this.instrumentsPerChannel;r++){const h=z(0,e.length,O[t.charCodeAt(s++)]),o=this.channels[n].instruments[r];o.vibrato=e[h],o.filterEnvelope=1==o.filterEnvelope?i[h]:o.filterEnvelope}}else if(a){const e=[0,1,2,3,0,0],i=[1,1,1,1,16,13],n=z(0,e.length,O[t.charCodeAt(s++)]),r=this.channels[f].instruments[u];r.vibrato=e[n],r.filterEnvelope=1==r.filterEnvelope?i[n]:r.filterEnvelope}else{const i=z(0,e.vibratos.length,O[t.charCodeAt(s++)]);this.channels[f].instruments[u].vibrato=i}break;case 104:if(n){const i=O[t.charCodeAt(s++)];this.channels[i].instruments[0].interval=z(0,e.intervals.length,O[t.charCodeAt(s++)])}else if(o)for(let i=0;i<this.getChannelCount();i++)for(let n=0;n<this.instrumentsPerChannel;n++){const r=O[t.charCodeAt(s++)];let h=z(0,e.intervals.length,r);8==r&&(h=2,this.channels[i].instruments[n].chord=3),this.channels[i].instruments[n].interval=h}else if(a){const i=O[t.charCodeAt(s++)];let n=z(0,e.intervals.length,i);8==i&&(n=2,this.channels[f].instruments[u].chord=3),this.channels[f].instruments[u].interval=n}else this.channels[f].instruments[u].interval=z(0,e.intervals.length,O[t.charCodeAt(s++)]);break;case 67:this.channels[f].instruments[u].chord=z(0,e.chords.length,O[t.charCodeAt(s++)]);break;case 113:this.channels[f].instruments[u].effects=z(0,e.effectsNames.length,O[t.charCodeAt(s++)]);break;case 118:if(n){const i=O[t.charCodeAt(s++)],n=this.channels[i].instruments[0];n.volume=z(0,e.volumeRange,O[t.charCodeAt(s++)]),5==n.volume&&(n.volume=e.volumeRange-1)}else if(o)for(let i=0;i<this.getChannelCount();i++)for(let n=0;n<this.instrumentsPerChannel;n++){const r=this.channels[i].instruments[n];r.volume=z(0,e.volumeRange,O[t.charCodeAt(s++)]),5==r.volume&&(r.volume=e.volumeRange-1)}else if(a){const i=this.channels[f].instruments[u];i.volume=z(0,e.volumeRange,O[t.charCodeAt(s++)]),5==i.volume&&(i.volume=e.volumeRange-1)}else{this.channels[f].instruments[u].volume=z(0,e.volumeRange,O[t.charCodeAt(s++)])}break;case 76:this.channels[f].instruments[u].pan=z(0,e.panMax+1,O[t.charCodeAt(s++)]);break;case 65:this.channels[f].instruments[u].algorithm=z(0,e.algorithms.length,O[t.charCodeAt(s++)]);break;case 70:this.channels[f].instruments[u].feedbackType=z(0,e.feedbacks.length,O[t.charCodeAt(s++)]);break;case 66:this.channels[f].instruments[u].feedbackAmplitude=z(0,e.operatorAmplitudeMax+1,O[t.charCodeAt(s++)]);break;case 86:this.channels[f].instruments[u].feedbackEnvelope=z(0,e.envelopes.length,O[t.charCodeAt(s++)]);break;case 81:for(let i=0;i<e.operatorCount;i++)this.channels[f].instruments[u].operators[i].frequency=z(0,e.operatorFrequencies.length,O[t.charCodeAt(s++)]);break;case 80:for(let i=0;i<e.operatorCount;i++)this.channels[f].instruments[u].operators[i].amplitude=z(0,e.operatorAmplitudeMax+1,O[t.charCodeAt(s++)]);break;case 69:for(let i=0;i<e.operatorCount;i++)this.channels[f].instruments[u].operators[i].envelope=z(0,e.envelopes.length,O[t.charCodeAt(s++)]);break;case 83:{const i=this.channels[f].instruments[u];if(3==i.type){const n=Math.ceil(e.spectrumControlPoints*e.spectrumControlPointBits/6),r=new D(t,s,s+n);for(let t=0;t<e.spectrumControlPoints;t++)i.spectrumWave.spectrum[t]=r.read(e.spectrumControlPointBits);i.spectrumWave.markCustomWaveDirty(),s+=n}else{if(4!=i.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const n=Math.ceil(e.drumCount*e.spectrumControlPoints*e.spectrumControlPointBits/6),r=new D(t,s,s+n);for(let t=0;t<e.drumCount;t++){for(let s=0;s<e.spectrumControlPoints;s++)i.drumsetSpectrumWaves[t].spectrum[s]=r.read(e.spectrumControlPointBits);i.drumsetSpectrumWaves[t].markCustomWaveDirty()}s+=n}}}break;case 72:{const i=this.channels[f].instruments[u],n=Math.ceil(e.harmonicsControlPoints*e.harmonicsControlPointBits/6),r=new D(t,s,s+n);for(let t=0;t<e.harmonicsControlPoints;t++)i.harmonicsWave.harmonics[t]=r.read(e.harmonicsControlPointBits);i.harmonicsWave.markCustomWaveDirty(),s+=n}break;case 98:{let e;if(n){const i=O[t.charCodeAt(s++)],n=O[t.charCodeAt(s++)];e=Math.ceil(.5*n);const r=new D(t,s,s+e);for(let t=0;t<n;t++)this.channels[i].bars[t]=r.read(3)+1}else if(h){let i=0;for(;1<<i<this.patternsPerChannel;)i++;e=Math.ceil(this.getChannelCount()*this.barCount*i/6);const n=new D(t,s,s+e);for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)this.channels[t].bars[e]=n.read(i)+1}else{let i=0;for(;1<<i<this.patternsPerChannel+1;)i++;e=Math.ceil(this.getChannelCount()*this.barCount*i/6);const n=new D(t,s,s+e);for(let t=0;t<this.getChannelCount();t++)for(let e=0;e<this.barCount;e++)this.channels[t].bars[e]=n.read(i)}s+=e}break;case 112:{let i,r=0;if(n)i=O[t.charCodeAt(s++)],s++,r=O[t.charCodeAt(s++)],r<<=6,r+=O[t.charCodeAt(s++)];else{i=0;let e=L(1,4,O[t.charCodeAt(s++)]);for(;e>0;)r<<=6,r+=O[t.charCodeAt(s++)],e--}const h=new D(t,s,s+r);s+=r;let o=0;for(;1<<o<this.instrumentsPerChannel;)o++;for(;;){const t=this.getChannelIsNoise(i),s=t?0:12*this.channels[i].octave;let r=null,l=null,c=(t?4:12)+s;const f=t?[4,6,7,2,3,8,0,10]:[12,19,24,31,36,7,0],u=[];for(let t=0;t<f.length;t++)f[t]+=s;for(let t=0;t<this.patternsPerChannel;t++){const s=this.channels[i].patterns[t];if(s.reset(),s.instrument=h.read(o),!n&&0==h.read(1))continue;let p=0;const m=s.notes;for(;p<this.beatsPerBar*e.partsPerBeat;){const t=1==h.read(1);let s=!1,i=0;if(t?i=L(0,u.length-1,h.readLongTail(0,0)):s=1==h.read(1),t||s){let s,n,o;if(t)s=u[i],u.splice(i,1);else{for(s={},s.pitchCount=1;s.pitchCount<e.maxChordSize&&1==h.read(1);)s.pitchCount++;s.pinCount=h.readPinCount(),s.initialVolume=h.read(2),s.pins=[],s.length=0,s.bendCount=0;for(let t=0;t<s.pinCount;t++)n={},n.pitchBend=1==h.read(1),n.pitchBend&&s.bendCount++,s.length+=a?h.readLegacyPartDuration()*e.partsPerBeat/e.rhythms[this.rhythm].stepsPerBeat:h.readPartDuration(),n.time=s.length,n.volume=h.read(2),s.pins.push(n)}u.unshift(s),u.length>10&&u.pop(),r=new N(0,p,p+s.length,s.initialVolume),r.pitches=[],r.pins.length=1;const d=[];for(let t=0;t<s.pitchCount+s.bendCount;t++){if(1==h.read(1)){const t=L(0,f.length-1,h.read(3));o=f[t],f.splice(t,1)}else{const t=h.readPitchInterval();o=c;let e=t;for(;e>0;){for(o++;-1!=f.indexOf(o);)o++;e--}for(;e<0;){for(o--;-1!=f.indexOf(o);)o--;e++}}f.unshift(o),f.length>8&&f.pop(),t<s.pitchCount?r.pitches.push(o):d.push(o),c=t==s.pitchCount-1?r.pitches[0]:o}d.unshift(r.pitches[0]);for(const t of s.pins)t.pitchBend&&d.shift(),l=I(d[0]-r.pitches[0],t.time,t.volume),r.pins.push(l);p=L(0,this.beatsPerBar*e.partsPerBeat,r.end),m.push(r)}else{p+=a?h.readLegacyPartDuration()*e.partsPerBeat/e.rhythms[this.rhythm].stepsPerBeat:h.readPartDuration()}}}if(n)break;if(i++,i>=this.getChannelCount())break}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(c)+" at index "+(s-1))}}toJsonObject(t=!0,s=1,i=!0){const n=[];for(let r=0;r<this.getChannelCount();r++){const h=[],o=this.getChannelIsNoise(r);for(let t=0;t<this.instrumentsPerChannel;t++)h.push(this.channels[r].instruments[t].toJsonObject());const a=[];for(const t of this.channels[r].patterns){const s=[];for(const i of t.notes){const t=[];for(const s of i.pins)t.push({tick:(s.time+i.start)*e.rhythms[this.rhythm].stepsPerBeat/e.partsPerBeat,pitchBend:s.interval,volume:Math.round(100*s.volume/3)});s.push({pitches:i.pitches,points:t})}a.push({instrument:t.instrument+1,notes:s})}const l=[];if(t)for(let t=0;t<this.loopStart;t++)l.push(this.channels[r].bars[t]);for(let t=0;t<s;t++)for(let t=this.loopStart;t<this.loopStart+this.loopLength;t++)l.push(this.channels[r].bars[t]);if(i)for(let t=this.loopStart+this.loopLength;t<this.barCount;t++)l.push(this.channels[r].bars[t]);n.push({type:o?"drum":"pitch",octaveScrollBar:this.channels[r].octave,instruments:h,patterns:a,sequence:l})}return{format:V.N,version:V.I,scale:e.scales[this.scale].name,key:e.keys[this.key].name,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:e.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,channels:n}}fromJsonObject(t){if(this.initToDefault(!0),!t)return;if(this.scale=11,null!=t.scale){const s={"romani :)":"dbl harmonic :)","romani :(":"dbl harmonic :(",enigma:"strange"},i=null!=s[t.scale]?s[t.scale]:t.scale,n=e.scales.findIndex((t=>t.name==i));-1!=n&&(this.scale=n)}if(null!=t.key)if("number"==typeof t.key)this.key=(t.key+1200>>>0)%e.keys.length;else if("string"==typeof t.key){const e=t.key,s=e.charAt(0).toUpperCase(),i=e.charAt(1).toLowerCase();let n={C:0,D:2,E:4,F:5,G:7,A:9,B:11}[s];const r={"#":1,"♯":1,b:-1,"♭":-1}[i];null!=n&&(null!=r&&(n+=r),n<0&&(n+=12),n%=12,this.key=n)}null!=t.beatsPerMinute&&(this.tempo=z(e.tempoMin,e.tempoMax+1,0|t.beatsPerMinute)),null!=t.reverb&&(this.reverb=z(0,e.reverbRange,0|t.reverb)),null!=t.beatsPerBar&&(this.beatsPerBar=Math.max(e.beatsPerBarMin,Math.min(e.beatsPerBarMax,0|t.beatsPerBar)));let s=4;null!=t.ticksPerBeat&&(s=0|t.ticksPerBeat||4,this.rhythm=e.rhythms.findIndex((t=>t.stepsPerBeat==s)),-1==this.rhythm&&(this.rhythm=1));let i=1,n=1,r=1;if(t.channels)for(const e of t.channels)e.instruments&&(i=Math.max(i,0|e.instruments.length)),e.patterns&&(n=Math.max(n,0|e.patterns.length)),e.sequence&&(r=Math.max(r,0|e.sequence.length));this.instrumentsPerChannel=Math.min(i,e.instrumentsPerChannelMax),this.patternsPerChannel=Math.min(n,e.barCountMax),this.barCount=Math.min(r,e.barCountMax),null!=t.introBars&&(this.loopStart=z(0,this.barCount,0|t.introBars)),null!=t.loopBars&&(this.loopLength=z(1,this.barCount-this.loopStart+1,0|t.loopBars));const h=[],o=[];if(t.channels)for(let i=0;i<t.channels.length;i++){let n=t.channels[i];const r=new K;let a=!1;a=null!=n.type?"drum"==n.type:i>=3,a?o.push(r):h.push(r),null!=n.octaveScrollBar&&(r.octave=z(0,e.scrollableOctaves+1,0|n.octaveScrollBar));for(let t=r.instruments.length;t<this.instrumentsPerChannel;t++)r.instruments[t]=new j(a);r.instruments.length=this.instrumentsPerChannel;for(let t=r.patterns.length;t<this.patternsPerChannel;t++)r.patterns[t]=new R;r.patterns.length=this.patternsPerChannel;for(let t=0;t<this.barCount;t++)r.bars[t]=1;r.bars.length=this.barCount;for(let t=0;t<this.instrumentsPerChannel;t++){r.instruments[t].fromJsonObject(n.instruments[t],a)}for(let t=0;t<this.patternsPerChannel;t++){const i=r.patterns[t];let h=void 0;if(n.patterns&&(h=n.patterns[t]),null!=h&&(i.instrument=z(0,this.instrumentsPerChannel,(0|h.instrument)-1),h.notes&&h.notes.length>0)){const t=Math.min(this.beatsPerBar*e.partsPerBeat,h.notes.length>>>0);let n=0;for(let r=0;r<h.notes.length&&!(r>=t);r++){const t=h.notes[r];if(!(t&&t.pitches&&t.pitches.length>=1&&t.points&&t.points.length>=2))continue;const o=new N(0,0,0,0);o.pitches=[],o.pins=[];for(let s=0;s<t.pitches.length;s++){const i=0|t.pitches[s];if(-1==o.pitches.indexOf(i)&&(o.pitches.push(i),o.pitches.length>=e.maxChordSize))break}if(o.pitches.length<1)continue;let l=n,c=0;for(let i=0;i<t.points.length;i++){const n=t.points[i];if(null==n||null==n.tick)continue;const r=null==n.pitchBend?0:0|n.pitchBend,h=Math.round(+n.tick*e.partsPerBeat/s),a=null==n.volume?3:Math.max(0,Math.min(3,Math.round(3*(0|n.volume)/100)));if(!(h>this.beatsPerBar*e.partsPerBeat)){if(0==o.pins.length){if(h<l)continue;o.start=h,c=r}else if(h<=l)continue;l=h,o.pins.push(I(r-c,h-o.start,a))}}if(o.pins.length<2)continue;o.end=o.pins[o.pins.length-1].time+o.start;const f=a?e.drumCount-1:e.maxPitch;let u=f,p=0;for(let t=0;t<o.pitches.length;t++)o.pitches[t]+=c,(o.pitches[t]<0||o.pitches[t]>f)&&(o.pitches.splice(t,1),t--),o.pitches[t]<u&&(u=o.pitches[t]),o.pitches[t]>p&&(p=o.pitches[t]);if(!(o.pitches.length<1)){for(let t=0;t<o.pins.length;t++){const e=o.pins[t];e.interval+u<0&&(e.interval=-u),e.interval+p>f&&(e.interval=f-p),t>=2&&e.interval==o.pins[t-1].interval&&e.interval==o.pins[t-2].interval&&e.volume==o.pins[t-1].volume&&e.volume==o.pins[t-2].volume&&(o.pins.splice(t-1,1),t--)}i.notes.push(o),n=o.end}}}}for(let t=0;t<this.barCount;t++)r.bars[t]=n.sequence?Math.min(this.patternsPerChannel,n.sequence[t]>>>0):0}h.length>e.pitchChannelCountMax&&(h.length=e.pitchChannelCountMax),o.length>e.noiseChannelCountMax&&(o.length=e.noiseChannelCountMax),this.pitchChannelCount=h.length,this.noiseChannelCount=o.length,this.channels.length=0,Array.prototype.push.apply(this.channels,h),Array.prototype.push.apply(this.channels,o)}getPattern(t,e){if(e<0||e>=this.barCount)return null;const s=this.channels[t].bars[e];return 0==s?null:this.channels[t].patterns[s-1]}getPatternInstrument(t,e){const s=this.getPattern(t,e);return null==s?0:s.instrument}getBeatsPerMinute(){return this.tempo}}V.N="BeepBox",V.L=2,V.I=8;class G{constructor(){this.pitches=[0,0,0,0],this.pitchCount=0,this.chordSize=0,this.drumsetPitch=0,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.active=!1,this.noteStart=0,this.noteEnd=0,this.noteLengthTicks=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.lastVolume=0,this.stereoVolume1=0,this.stereoVolume2=0,this.stereoOffset=0,this.stereoDelay=0,this.sample=0,this.phases=[],this.phaseDeltas=[],this.volumeStarts=[],this.volumeDeltas=[],this.volumeStart=0,this.volumeDelta=0,this.phaseDeltaScale=0,this.pulseWidth=0,this.pulseWidthDelta=0,this.filter=0,this.filterScale=0,this.filterSample0=0,this.filterSample1=0,this.vibratoScale=0,this.intervalMult=0,this.intervalVolumeMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.reset()}reset(){for(let t=0;t<e.operatorCount;t++)this.phases[t]=0,this.feedbackOutputs[t]=0;this.sample=0,this.filterSample0=0,this.filterSample1=0,this.liveInputSamplesHeld=0}}class Q{constructor(t=null){this.samplesPerSecond=44100,this.song=null,this.liveInputDuration=0,this.liveInputStarted=!1,this.liveInputPitches=[],this.liveInputChannel=0,this.loopRepeatCount=-1,this.volume=1,this.playheadInternal=0,this.bar=0,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0,this.isPlayingSong=!1,this.liveInputEndTime=0,this.tonePool=new T,this.activeTones=[],this.releasedTones=[],this.liveInputTones=new T,this.limit=0,this.stereoBufferIndex=0,this.samplesForNone=null,this.samplesForReverb=null,this.samplesForChorus=null,this.samplesForChorusReverb=null,this.chorusDelayLine=new Float32Array(2048),this.chorusDelayPos=0,this.chorusPhase=0,this.reverbDelayLine=new Float32Array(16384),this.reverbDelayPos=0,this.reverbFeedback0=0,this.reverbFeedback1=0,this.reverbFeedback2=0,this.reverbFeedback3=0,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=t=>{const e=t.outputBuffer,s=e.getChannelData(0),i=e.getChannelData(1);if(performance.now()<this.liveInputEndTime||this.isPlayingSong)this.synthesize(s,i,e.length,this.isPlayingSong);else{for(let t=0;t<e.length;t++)s[t]=0,i[t]=0;this.deactivateAudio()}},null!=t&&this.setSong(t)}static warmUpSynthesizer(t){if(null!=t)for(let e=0;e<t.getChannelCount();e++)for(let s=0;s<t.instrumentsPerChannel;s++)Q.getInstrumentSynthFunction(t.channels[e].instruments[s]),t.channels[e].instruments[s].warmUp()}static operatorAmplitudeCurve(t){return(Math.pow(16,t/15)-1)/15}get playing(){return this.isPlayingSong}get playhead(){return this.playheadInternal}set playhead(t){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,t));let s=this.playheadInternal;this.bar=Math.floor(s),s=this.song.beatsPerBar*(s-this.bar),this.beat=Math.floor(s),s=e.partsPerBeat*(s-this.beat),this.part=Math.floor(s),s=e.ticksPerPart*(s-this.part),this.tick=Math.floor(s);const i=this.getSamplesPerTick();s=i*(s-this.tick),this.tickSampleCountdown=i-s}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*e.ticksPerPart*e.partsPerBeat*this.song.beatsPerBar}getTotalBars(t,e){if(null==this.song)throw new Error;let s=this.song.loopLength*(this.loopRepeatCount+1);return t&&(s+=this.song.loopStart),e&&(s+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),s}setSong(t){"string"==typeof t?this.song=new V(t):t instanceof V&&(this.song=t)}activateAudio(){null!=this.audioCtx&&null!=this.scriptNode||(this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(2048,0,2):this.audioCtx.createJavaScriptNode(2048,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination)),this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.isPlayingSong=!0,Q.warmUpSynthesizer(this.song),this.activateAudio())}pause(){this.isPlayingSong&&(this.isPlayingSong=!1)}snapToStart(){this.bar=0,this.snapToBar()}goToBar(t){this.bar=t,this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}resetEffects(){this.reverbDelayPos=0,this.reverbFeedback0=0,this.reverbFeedback1=0,this.reverbFeedback2=0,this.reverbFeedback3=0,this.freeAllTones();for(let t=0;t<this.reverbDelayLine.length;t++)this.reverbDelayLine[t]=0;for(let t=0;t<this.chorusDelayLine.length;t++)this.chorusDelayLine[t]=0;if(null!=this.samplesForNone)for(let t=0;t<this.samplesForNone.length;t++)this.samplesForNone[t]=0;if(null!=this.samplesForReverb)for(let t=0;t<this.samplesForReverb.length;t++)this.samplesForReverb[t]=0;if(null!=this.samplesForChorus)for(let t=0;t<this.samplesForChorus.length;t++)this.samplesForChorus[t]=0;if(null!=this.samplesForChorusReverb)for(let t=0;t<this.samplesForChorusReverb.length;t++)this.samplesForChorusReverb[t]=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const t=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-t}}nextBar(){if(!this.song)return;const t=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-t}prevBar(){if(!this.song)return;const t=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-t}synthesize(t,s,i,n=!0){if(null==this.song){for(let e=0;e<i;e++)t[e]=0,s[e]=0;return void this.deactivateAudio()}const r=this.song.getChannelCount();for(let t=this.activeTones.length;t<r;t++)this.activeTones[t]=new T,this.releasedTones[t]=new T;this.activeTones.length=r,this.releasedTones.length=r;const h=this.getSamplesPerTick();let o=0,a=!1;for(;this.tickSampleCountdown<=0;)this.tickSampleCountdown+=h;this.tickSampleCountdown>h&&(this.tickSampleCountdown=h),n&&(this.beat>=this.song.beatsPerBar&&(this.bar++,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=h,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--)),this.bar>=this.song.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(a=!0,this.pause())));const l=4*i;null!=this.samplesForNone&&this.samplesForNone.length==l&&null!=this.samplesForReverb&&this.samplesForReverb.length==l&&null!=this.samplesForChorus&&this.samplesForChorus.length==l&&null!=this.samplesForChorusReverb&&this.samplesForChorusReverb.length==l||(this.samplesForNone=new Float32Array(l),this.samplesForReverb=new Float32Array(l),this.samplesForChorus=new Float32Array(l),this.samplesForChorusReverb=new Float32Array(l),this.stereoBufferIndex=0);let c=this.stereoBufferIndex;const f=this.samplesForNone,u=this.samplesForReverb,p=this.samplesForChorus,m=this.samplesForChorusReverb,d=+this.volume,y=this.chorusDelayLine,g=this.reverbDelayLine,b=2*Math.PI/(2*this.samplesPerSecond),w=150*this.samplesPerSecond/44100,v=2048-1.51*w,M=2048-2.1*w,k=2048-3.35*w,x=2048-1.47*w,S=2048-2.15*w,C=2048-3.25*w;let P=this.chorusPhase%(2*Math.PI),B=2047&this.chorusDelayPos,E=16383&this.reverbDelayPos,F=+this.reverbFeedback0,O=+this.reverbFeedback1,D=+this.reverbFeedback2,A=+this.reverbFeedback3;const I=.425*Math.pow(this.song.reverb/e.reverbRange,.667),z=1-Math.pow(.5,4/this.samplesPerSecond),L=1-Math.pow(.5,4e3/this.samplesPerSecond);let N=+this.limit;for(;o<i&&!a;){const r=i-o,T=Math.min(Math.ceil(this.tickSampleCountdown),r);for(let t=0;t<this.song.getChannelCount();t++){if(t==this.liveInputChannel){this.determineLiveInputTones(this.song);for(let e=0;e<this.liveInputTones.count();e++){const s=this.liveInputTones.get(e);this.playTone(this.song,c,l,t,h,T,s,!1,!1)}}this.determineCurrentActiveTones(this.song,t,n);for(let e=0;e<this.activeTones[t].count();e++){const s=this.activeTones[t].get(e);this.playTone(this.song,c,l,t,h,T,s,!1,!1)}for(let s=0;s<this.releasedTones[t].count();s++){const i=this.releasedTones[t].get(s);if(i.ticksSinceReleased>=i.instrument.getTransition().releaseTicks){this.freeReleasedTone(t,s),s--;continue}const n=s+this.activeTones[t].count()>=e.maximumTonesPerChannel;this.playTone(this.song,c,l,t,h,T,i,!0,n)}}let R=B+v-w*Math.sin(P+0),$=B+M-w*Math.sin(P+2.1),W=B+k-w*Math.sin(P+4.2),U=B+1024+x-w*Math.sin(P+3.2),j=B+1024+S-w*Math.sin(P+5.3),K=B+1024+C-w*Math.sin(P+1);P+=b*T;const V=(B+T+v-w*Math.sin(P+0)-R)/T,G=(B+T+M-w*Math.sin(P+2.1)-$)/T,Q=(B+T+k-w*Math.sin(P+4.2)-W)/T,q=(B+T+1024+x-w*Math.sin(P+3.2)-U)/T,_=(B+T+1024+S-w*Math.sin(P+5.3)-j)/T,J=(B+T+1024+C-w*Math.sin(P+1)-K)/T,H=o+T;for(let e=o;e<H;e++){const i=c,n=c+1,r=f[i];f[i]=0;const h=f[n];f[n]=0;const o=u[i];u[i]=0;const a=u[n];u[n]=0;const l=p[i];p[i]=0;const b=p[n];p[n]=0;const w=m[i];m[i]=0;const v=m[n];m[n]=0,c+=2;const M=l+w,k=b+v,x=R%1,S=$%1,C=W%1,P=U%1,T=j%1,H=K%1,Z=y[2047&R],X=y[R+1&2047],Y=y[2047&$],tt=y[$+1&2047],et=y[2047&W],st=y[W+1&2047],it=y[2047&U],nt=y[U+1&2047],rt=y[2047&j],ht=y[j+1&2047],ot=y[2047&K],at=.5*(M-(Z+(X-Z)*x)+(Y+(tt-Y)*S)-(et+(st-et)*C)),lt=.5*(k-(it+(nt-it)*P)+(rt+(ht-rt)*T)-(ot+(y[K+1&2047]-ot)*H));y[B]=M,y[B+1024&2047]=k,B=B+1&2047,R+=V,$+=G,W+=Q,U+=q,j+=_,K+=J;const ct=E+3041&16383,ft=E+6426&16383,ut=E+10907&16383,pt=g[E],mt=g[ct],dt=g[ft],yt=g[ut],gt=-(pt+w+o)+mt,bt=-(pt+v+a)-mt,wt=-dt+yt,vt=-dt-yt;F+=.5*((gt+wt)*I-F),O+=.5*((bt+vt)*I-O),D+=.5*((gt-wt)*I-D),A+=.5*((bt-vt)*I-A),g[ct]=F,g[ft]=O,g[ut]=D,g[E]=A,E=E+1&16383;const Mt=r+at+o+mt+dt+yt,kt=h+lt+a+pt+dt-yt,xt=Mt<0?-Mt:Mt,St=kt<0?-kt:kt,Ct=xt>St?xt:St;N+=(Ct-N)*(N<Ct?L:z);const Pt=d/(N>=1?1.05*N:.8*N+.25);t[e]=Mt*Pt,s[e]=kt*Pt}if(o+=T,this.tickSampleCountdown-=T,this.tickSampleCountdown<=0){for(let t=0;t<this.song.getChannelCount();t++)for(let s=0;s<this.releasedTones[t].count();s++){this.releasedTones[t].get(s).ticksSinceReleased++;s+this.activeTones[t].count()>=e.maximumTonesPerChannel&&(this.freeReleasedTone(t,s),s--)}if(this.tick++,this.tickSampleCountdown+=h,this.tick==e.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--;for(let t=0;t<this.song.getChannelCount();t++)for(let s=0;s<this.activeTones[t].count();s++){const i=this.activeTones[t].get(s),n=i.instrument.getTransition();n.isSeamless||null==i.note||i.note.end!=this.part+this.beat*e.partsPerBeat||(n.releases?this.releaseTone(t,i):this.freeTone(i),this.activeTones[t].remove(s),s--)}this.part==e.partsPerBeat&&(this.part=0,n&&(this.beat++,this.beat==this.song.beatsPerBar&&(this.beat=0,this.bar++,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=this.song.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(a=!0,this.resetEffects(),this.pause())))))}}}const R=1e-24;-1e-24<F&&F<R&&(F=0),-1e-24<O&&O<R&&(O=0),-1e-24<D&&D<R&&(D=0),-1e-24<A&&A<R&&(A=0),-1e-24<N&&N<R&&(N=0),this.stereoBufferIndex=(this.stereoBufferIndex+2*i)%l,this.chorusPhase=P,this.chorusDelayPos=B,this.reverbDelayPos=E,this.reverbFeedback0=F,this.reverbFeedback1=O,this.reverbFeedback2=D,this.reverbFeedback3=A,this.limit=N,n&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/h)/2+this.part)/e.partsPerBeat+this.beat)/this.song.beatsPerBar+this.bar)}freeTone(t){this.tonePool.pushBack(t)}newTone(){if(this.tonePool.count()>0){const t=this.tonePool.popBack();return t.reset(),t.active=!1,t}return new G}releaseTone(t,e){this.releasedTones[t].pushFront(e)}freeReleasedTone(t,e){this.freeTone(this.releasedTones[t].get(e)),this.releasedTones[t].remove(e)}freeAllTones(){for(;this.liveInputTones.count()>0;)this.freeTone(this.liveInputTones.popBack());for(let t=0;t<this.activeTones.length;t++)for(;this.activeTones[t].count()>0;)this.freeTone(this.activeTones[t].popBack());for(let t=0;t<this.releasedTones.length;t++)for(;this.releasedTones[t].count()>0;)this.freeTone(this.releasedTones[t].popBack())}determineLiveInputTones(t){const e=this.liveInputTones,s=this.liveInputPitches;let i=0;if(this.liveInputDuration>0){const n=t.channels[this.liveInputChannel].instruments[t.getPatternInstrument(this.liveInputChannel,this.bar)];if(n.getChord().arpeggiates){let t;0==e.count()?(t=this.newTone(),e.pushBack(t)):!n.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(this.liveInputChannel,e.popFront()),t=this.newTone(),e.pushBack(t)):t=e.get(0),i=1;for(let e=0;e<s.length;e++)t.pitches[e]=s[e];t.pitchCount=s.length,t.chordSize=1,t.instrument=n,t.note=t.prevNote=t.nextNote=null}else for(let t=0;t<s.length;t++){let r;e.count()<=t?(r=this.newTone(),e.pushBack(r)):!n.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(this.liveInputChannel,e.get(t)),r=this.newTone(),e.set(t,r)):r=e.get(t),i++,r.pitches[0]=s[t],r.pitchCount=1,r.chordSize=s.length,r.instrument=n,r.note=r.prevNote=r.nextNote=null}}for(;e.count()>i;)this.releaseTone(this.liveInputChannel,e.popBack());this.liveInputStarted=!1}determineCurrentActiveTones(t,s,i){const n=t.channels[s].instruments[t.getPatternInstrument(s,this.bar)],r=t.getPattern(s,this.bar),h=this.part+this.beat*e.partsPerBeat;let o=null,a=null,l=null;if(i&&null!=r&&!t.channels[s].muted)for(let t=0;t<r.notes.length;t++)if(r.notes[t].end<=h)a=r.notes[t];else if(r.notes[t].start<=h&&r.notes[t].end>h)o=r.notes[t];else if(r.notes[t].start>h){l=r.notes[t];break}const c=this.activeTones[s];if(null!=o)null!=a&&a.end!=o.start&&(a=null),null!=l&&l.start!=o.end&&(l=null),this.syncTones(s,c,n,o.pitches,o,a,l,h);else for(;c.count()>0;)c.peakBack().instrument.getTransition().releases?this.releaseTone(s,c.popBack()):this.freeTone(c.popBack())}syncTones(t,s,i,n,r,h,o,a){let l=0;if(i.getChord().arpeggiates){let t;0==s.count()?(t=this.newTone(),s.pushBack(t)):t=s.get(0),l=1;for(let e=0;e<n.length;e++)t.pitches[e]=n[e];t.pitchCount=n.length,t.chordSize=1,t.instrument=i,t.note=r,t.noteStart=r.start,t.noteEnd=r.end,t.prevNote=h,t.nextNote=o,t.prevNotePitchIndex=0,t.nextNotePitchIndex=0}else{const t=i.getTransition();for(let c=0;c<n.length;c++){const n=c*i.getChord().strumParts;let f=h&&h.pitches.length>c?h:null,u=r,p=o&&o.pitches.length>c?o:null,m=u.start+n;if(m>a){if(!(s.count()>c&&t.isSeamless&&null!=f))break;p=u,u=f,f=null,m=u.start+n}let d,y=u.end;t.isSeamless&&null!=p&&(y=Math.min(e.partsPerBeat*this.song.beatsPerBar,y+n)),s.count()<=c?(d=this.newTone(),s.pushBack(d)):d=s.get(c),l++,d.pitches[0]=u.pitches[c],d.pitchCount=1,d.chordSize=u.pitches.length,d.instrument=i,d.note=u,d.noteStart=m,d.noteEnd=y,d.prevNote=f,d.nextNote=p,d.prevNotePitchIndex=c,d.nextNotePitchIndex=c}}for(;s.count()>l;)s.peakBack().instrument.getTransition().releases?this.releaseTone(t,s.popBack()):this.freeTone(s.popBack())}playTone(t,e,s,i,n,r,h,o,a){let l;switch(Q.computeTone(this,t,i,n,r,h,o,a),h.instrument.effects){case 0:l=this.samplesForNone;break;case 1:l=this.samplesForReverb;break;case 2:l=this.samplesForChorus;break;case 3:l=this.samplesForChorusReverb;break;default:throw new Error}Q.getInstrumentSynthFunction(h.instrument)(this,l,e,s,2*r,h,h.instrument)}static computeEnvelope(t,e,s,i){switch(t.type){case 0:return i;case 1:return 1;case 4:return 1/(1+e*t.speed);case 5:return 1-1/(1+e*t.speed);case 6:return.5-.5*Math.cos(2*s*Math.PI*t.speed);case 7:return.75-.25*Math.cos(2*s*Math.PI*t.speed);case 2:return Math.max(1,2-10*e);case 3:const n=t.speed,r=.25/Math.sqrt(n);return e<r?e/r:1/(1+(e-r)*n);case 8:return Math.pow(2,-t.speed*e);default:throw new Error("Unrecognized operator envelope type.")}}static computeChordVolume(t){return 1/(.25*(t-1)+1)}static computeTone(t,s,i,n,h,o,a,l){const c=o.instrument,f=c.getTransition(),u=c.getChord(),p=u.arpeggiates?1:Q.computeChordVolume(o.chordSize),m=s.getChannelIsNoise(i),d=m?e.noiseInterval:1,y=e.ticksPerPart*n/t.samplesPerSecond,g=1/e.partsPerBeat,b=o.active,w=t.tickSampleCountdown,v=1-w/n,M=1-(w-h)/n,k=(t.beat*e.partsPerBeat+t.part)*e.ticksPerPart+t.tick,x=k/e.ticksPerPart,S=(k+1)/e.ticksPerPart,C=x+(S-x)*v,P=x+(S-x)*M;o.phaseDeltaScale=0,o.filter=1,o.filterScale=1,o.vibratoScale=0,o.intervalMult=1,o.intervalVolumeMult=1,o.active=!1;const B=(c.pan-e.panCenter)/e.panCenter,E=65e-5*t.samplesPerSecond,T=2*Math.round(-B*E),F=1.414*Math.cos((1+B)*Math.PI*.25),O=1.414*Math.cos((1-B)*Math.PI*.25),D=Math.max(0,-T),A=Math.max(0,T);T>=0?(o.stereoVolume1=F,o.stereoVolume2=O,o.stereoOffset=0,o.stereoDelay=A+1):(o.stereoVolume1=O,o.stereoVolume2=F,o.stereoOffset=1,o.stereoDelay=D-1);let I,z,L,N,R=!0,$=0,W=0,U=0,K=1,V=1,G=p,q=p,_=0,J=0,H=0,Z=0;if(3==c.type)m?(z=e.spectrumBasePitch,L=.6):(z=e.keys[s.key].basePitch,L=.3),I=e.spectrumBasePitch,N=28;else if(4==c.type)z=e.spectrumBasePitch,L=.45,I=z,N=48;else if(2==c.type)z=e.chipNoises[c.chipNoise].basePitch,L=.19,I=z,N=e.chipNoises[c.chipNoise].isSoft?24:60;else if(1==c.type)z=e.keys[s.key].basePitch,L=.03,I=16,N=48;else if(0==c.type)z=e.keys[s.key].basePitch,L=.03375,I=16,N=48;else if(5==c.type)z=e.keys[s.key].basePitch,L=.025,I=16,N=48;else{if(6!=c.type)throw new Error("Unknown instrument type in computeTone.");z=e.keys[s.key].basePitch,L=.04725,I=16,N=48}for(let t=0;t<e.operatorCount;t++)o.phaseDeltas[t]=0,o.volumeStarts[t]=0,o.volumeDeltas[t]=0;if(a){const t=o.noteLengthTicks+o.ticksSinceReleased,s=o.ticksSinceReleased+v,i=o.ticksSinceReleased+M,n=o.noteLengthTicks+s,r=o.noteLengthTicks+i,h=o.instrument.getTransition();R=!1,$=Math.floor(t/e.ticksPerPart),W=U=o.lastInterval,_=J=Q.expressionToVolumeMult(o.lastVolume),K=Q.expressionToVolumeMult(3*(1-s/h.releaseTicks)),V=Q.expressionToVolumeMult(3*(1-i/h.releaseTicks)),H=n/e.ticksPerPart,Z=r/e.ticksPerPart,l&&(K*=1-v,V*=1-M)}else if(null==o.note){K=V=1,_=J=1,o.lastInterval=0,o.lastVolume=3,o.ticksSinceReleased=0,R=!1;const t=o.liveInputSamplesHeld/n;o.liveInputSamplesHeld+=h;const s=o.liveInputSamplesHeld/n;o.noteLengthTicks=s;const i=t/e.ticksPerPart,r=s/e.ticksPerPart;$=Math.floor(i),H=i,Z=r}else{const i=o.note,n=o.prevNote,r=o.nextNote,h=t.part+t.beat*e.partsPerBeat,a=e.partsPerBeat*s.beatsPerBar,l=o.noteStart,c=o.noteEnd;let m;for($=h-l,m=1;m<i.pins.length-1&&!(i.pins[m].time+i.start>h);m++);const d=i.pins[m-1],y=i.pins[m],g=l*e.ticksPerPart,w=c*e.ticksPerPart-g,k=(i.start+d.time)*e.ticksPerPart,C=(i.start+y.time)*e.ticksPerPart;o.lastInterval=i.pins[i.pins.length-1].interval,o.lastVolume=i.pins[i.pins.length-1].volume,o.ticksSinceReleased=0,o.noteLengthTicks=w;const P=h*e.ticksPerPart+t.tick,B=h*e.ticksPerPart+t.tick+1,E=P-g,T=B-g,F=Math.min(1,(P-k)/(C-k)),O=Math.min(1,(B-k)/(C-k));let D=d.volume+(y.volume-d.volume)*F,A=d.volume+(y.volume-d.volume)*O,I=1,z=1,L=p,N=p,j=d.interval+(y.interval-d.interval)*F,X=d.interval+(y.interval-d.interval)*O,Y=x-l,tt=S-l;R=P+v-g==0||!b;const et=.5*w;if(f.isSeamless&&!f.slides&&0==i.start)R=!b;else if(f.isSeamless&&null!=n&&(R=!b,f.slides)){const t=Math.min(et,f.slideTicks),e=Math.max(0,1-E/t),s=Math.max(0,1-T/t),r=.5*(n.pitches[o.prevNotePitchIndex]+n.pins[n.pins.length-1].interval-o.pitches[0]),h=.5*(n.pins[n.pins.length-1].volume-i.pins[0].volume),a=.5*(n.end-n.start);if(j+=e*r,X+=s*r,D+=e*h,A+=s*h,Y+=e*a,tt+=s*a,!u.arpeggiates){const t=.5*(n.pitches.length-o.chordSize);L=Q.computeChordVolume(o.chordSize+e*t),N=Q.computeChordVolume(o.chordSize+s*t)}}if(f.isSeamless&&!f.slides&&i.end==a);else if(f.isSeamless&&null!=r){if(f.slides){const t=Math.min(et,f.slideTicks),e=Math.max(0,1-(w-E)/t),s=Math.max(0,1-(w-T)/t),n=.5*(r.pitches[o.nextNotePitchIndex]-(o.pitches[0]+i.pins[i.pins.length-1].interval)),h=.5*(r.pins[0].volume-i.pins[i.pins.length-1].volume),a=.5*-(c-l);if(j+=e*n,X+=s*n,D+=e*h,A+=s*h,Y+=e*a,tt+=s*a,!u.arpeggiates){const t=.5*(r.pitches.length-o.chordSize);L=Q.computeChordVolume(o.chordSize+e*t),N=Q.computeChordVolume(o.chordSize+s*t)}}}else if(!f.releases){const t=f.releaseTicks;t>0&&(I*=Math.min(1,(w-E)/t),z*=Math.min(1,(w-T)/t))}W=j+(X-j)*v,U=j+(X-j)*M,_=Q.expressionToVolumeMult(D+(A-D)*v),J=Q.expressionToVolumeMult(D+(A-D)*M),K=I+(z-I)*v,V=I+(z-I)*M,G=L+(N-L)*v,q=L+(N-L)*M,H=Y+(tt-Y)*v,Z=Y+(tt-Y)*M}const X=1/t.samplesPerSecond;if(o.active=!0,0==c.type||1==c.type||5==c.type||6==c.type){const t=Q.getLFOAmplitude(c,y*C),s=Q.getLFOAmplitude(c,y*P),i=$<e.vibratos[c.vibrato].delayParts?0:e.vibratos[c.vibrato].amplitude;W+=i*t,U+=i*s}if(!f.isSeamless||(f.slides||null==o.note||0!=o.note.start)&&null==o.prevNote){const t=f.attackSeconds;t>0&&(K*=Math.min(1,y*H/t),V*=Math.min(1,y*Z/t))}const Y=Q.instrumentVolumeToVolumeMult(c.volume);4==c.type&&(o.drumsetPitch=o.pitches[0],null!=o.note&&(o.drumsetPitch+=o.note.pickMainInterval()),o.drumsetPitch=Math.max(0,Math.min(e.drumCount-1,o.drumsetPitch)));const tt=c.getFilterCutoffOctaves(),et=4==c.type?c.getDrumsetEnvelope(o.drumsetPitch):c.getFilterEnvelope(),st=e.filterCutoffMaxHz*Math.pow(2,tt),it=2*Math.sin(Math.PI*st/t.samplesPerSecond),nt=2*Math.sin(Math.PI*e.filterCutoffMinHz/t.samplesPerSecond);o.filter=it*Q.computeEnvelope(et,y*H,g*C,_);let rt=it*Q.computeEnvelope(et,y*Z,g*P,J);o.filter=Math.min(e.filterMax,Math.max(nt,o.filter)),rt=Math.min(e.filterMax,Math.max(nt,rt)),o.filterScale=Math.pow(rt/o.filter,1/h);let ht=Math.pow(.5,.35*tt);if(c.filterResonance>0&&(ht=Math.pow(ht,1.7)*Math.pow(.5,.125*(c.filterResonance-1))),8==et.type?ht*=1.25+.025*et.speed:4==et.type&&(ht*=1+.02*et.speed),R&&o.reset(),1==c.type){let i=1,n=0,a=0;if(o.pitchCount>1&&!u.harmonizes){const i=Math.floor((t.tick+t.part*e.ticksPerPart)/e.rhythms[s.rhythm].ticksPerArpeggio);a=o.pitches[r(o.pitchCount,s.rhythm,i)]-o.pitches[0]}const l=e.algorithms[c.algorithm].carrierCount;for(let t=0;t<e.operatorCount;t++){const s=e.algorithms[c.algorithm].associatedCarrier[t]-1,r=o.pitches[u.harmonizes?t<o.pitchCount?t:s<o.pitchCount?s:0:0],f=e.operatorFrequencies[c.operators[t].frequency].mult,p=e.operatorCarrierInterval[s]+a,m=z+(r+W)*d+p,b=f*j.frequencyFromPitch(m)+e.operatorFrequencies[c.operators[t].frequency].hzOffset;o.phaseDeltas[t]=b*X*e.sineWaveLength;const w=Q.operatorAmplitudeCurve(c.operators[t].amplitude),v=w*e.operatorFrequencies[c.operators[t].frequency].amplitudeSign;let M=v,k=v;if(t<l){const t=z+(r+U)*d+p,e=Math.pow(2,-(m-I)/N),s=Math.pow(2,-(t-I)/N);M*=e,k*=s,n+=w}else M*=1.5*e.sineWaveLength,k*=1.5*e.sineWaveLength,i*=1-Math.min(1,c.operators[t].amplitude/15);const x=e.envelopes[c.operators[t].envelope];M*=Q.computeEnvelope(x,y*H,g*C,_),k*=Q.computeEnvelope(x,y*Z,g*P,J),o.volumeStarts[t]=M,o.volumeDeltas[t]=(k-M)/h}const f=.3*e.sineWaveLength*c.feedbackAmplitude/15,p=e.envelopes[c.feedbackEnvelope];let m=f*Q.computeEnvelope(p,y*H,g*C,_),b=f*Q.computeEnvelope(p,y*Z,g*P,J);o.feedbackMult=m,o.feedbackDelta=(b-o.feedbackMult)/h;const w=L*Y;o.volumeStart=ht*w*K*G;const v=ht*w*V*q;o.volumeDelta=(v-o.volumeStart)/h,i*=(Math.pow(2,2-1.4*c.feedbackAmplitude/15)-1)/3,i*=1-Math.min(1,Math.max(0,n-1)/2),o.volumeStart*=1+3*i,o.volumeDelta*=1+3*i}else{let i=o.pitches[0];if(o.pitchCount>1){const n=Math.floor((t.tick+t.part*e.ticksPerPart)/e.rhythms[s.rhythm].ticksPerArpeggio);if(u.harmonizes){const t=o.pitches[1+r(o.pitchCount-1,s.rhythm,n)]-o.pitches[0];o.intervalMult=Math.pow(2,t/12),o.intervalVolumeMult=Math.pow(2,-t/N)}else i=o.pitches[r(o.pitchCount,s.rhythm,n)]}const n=z+(i+W)*d,a=z+(i+U)*d,l=j.frequencyFromPitch(n),f=Math.pow(2,-(n-I)/N),p=Math.pow(2,-(a-I)/N);let m=L*ht;if(2==c.type&&(m*=e.chipNoises[c.chipNoise].volume),0==c.type&&(m*=e.chipWaves[c.chipWave].volume),0!=c.type&&5!=c.type||(m*=e.intervals[c.interval].volume),6==c.type){const t=e.envelopes[c.pulseEnvelope],s=.5*Math.pow(.5,.5*(e.pulseWidthRange-c.pulseWidth-1)),i=s*Q.computeEnvelope(t,y*H,g*C,_),n=s*Q.computeEnvelope(t,y*Z,g*P,J);o.pulseWidth=i,o.pulseWidthDelta=(n-i)/h}o.phaseDeltas[0]=l*X,o.volumeStart=K*G*f*m*Y;let b=V*q*p*m*Y;0==et.type||6==c.type&&0==e.envelopes[c.pulseEnvelope].type||(o.volumeStart*=_,b*=J),o.volumeDelta=(b-o.volumeStart)/h}o.phaseDeltaScale=Math.pow(2,(U-W)*d/12/h)}static getLFOAmplitude(t,s){let i=0;for(const n of e.vibratos[t.vibrato].periodsSeconds)i+=Math.sin(2*Math.PI*s/n);return i}static getInstrumentSynthFunction(t){if(1==t.type){const s=t.algorithm+"_"+t.feedbackType;if(null==Q.fmSynthFunctionCache[s]){const i=[];for(const s of Q.fmSourceTemplate)if(-1!=s.indexOf("// CARRIER OUTPUTS")){const n=[];for(let s=0;s<e.algorithms[t.algorithm].carrierCount;s++)n.push("operator"+s+"Scaled");i.push(s.replace("/*operator#Scaled*/",n.join(" + ")))}else if(-1!=s.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let s=e.operatorCount-1;s>=0;s--)for(const n of Q.operatorSourceTemplate)if(-1!=n.indexOf("/* + operator@Scaled*/")){let r="";for(const i of e.algorithms[t.algorithm].modulatedBy[s])r+=" + operator"+(i-1)+"Scaled";const h=e.feedbacks[t.feedbackType].indices[s];if(h.length>0){r+=" + feedbackMult * (";const t=[];for(const e of h)t.push("operator"+(e-1)+"Output");r+=t.join(" + ")+")"}i.push(n.replace(/\#/g,s+"").replace("/* + operator@Scaled*/",r))}else i.push(n.replace(/\#/g,s+""));else if(-1!=s.indexOf("#"))for(let t=0;t<e.operatorCount;t++)i.push(s.replace(/\#/g,t+""));else i.push(s);Q.fmSynthFunctionCache[s]=new Function("synth","data","stereoBufferIndex","stereoBufferLength","runLength","tone","instrument",i.join("\n"))}return Q.fmSynthFunctionCache[s]}if(0==t.type)return Q.chipSynth;if(5==t.type)return Q.harmonicsSynth;if(6==t.type)return Q.pulseWidthSynth;if(2==t.type)return Q.noiseSynth;if(3==t.type)return Q.spectrumSynth;if(4==t.type)return Q.drumsetSynth;throw new Error("Unrecognized instrument type: "+t.type)}static chipSynth(t,s,i,n,r,h,o){const a=e.chipWaves[o.chipWave].samples,l=+a.length-1,c=+Math.pow(2,(e.intervals[o.interval].offset+e.intervals[o.interval].spread)/12),f=Math.pow(2,(e.intervals[o.interval].offset-e.intervals[o.interval].spread)/12)*h.intervalMult,u=h.intervalVolumeMult*e.intervals[o.interval].sign;0!=o.interval||o.getChord().customInterval||(h.phases[1]=h.phases[0]);const p=f/c;let m=h.phaseDeltas[0]*c*l,d=m*p;const y=+h.phaseDeltaScale;let g=+h.volumeStart;const b=+h.volumeDelta;let w=h.phases[0]%1*l,v=h.phases[1]%1*l,M=+h.filter,k=o.getFilterIsFirstOrder()?1:M;const x=+h.filterScale,S=o.getFilterIsFirstOrder()?1:x,C=e.filterMaxResonance*Math.pow(Math.max(0,o.getFilterResonance()-1)/(e.filterResonanceRange-2),.5);let P=+h.filterSample0,B=+h.filterSample1;const E=0|w,T=0|v,F=E%l,O=T%l,D=w-E,A=v-T;let I=a[F],z=a[O];I+=(a[F+1]-I)*D,z+=(a[O+1]-z)*A;const L=i+r;i+=h.stereoOffset;const N=h.stereoVolume1,R=h.stereoVolume2,$=h.stereoDelay;for(;i<L;){w+=m,v+=d;const t=0|w,e=0|v,r=t%l,h=e%l;let o=a[r],c=a[h];const f=w-t,p=v-e;o+=(a[r+1]-o)*f,c+=(a[h+1]-c)*p;let E=(o-I)/m,T=(c-z)/d;I=o,z=c;P+=M*(E+T*u-P+(C+C/(1-M))*(P-B)),B+=k*(P-B),M*=x,k*=S,m*=y,d*=y;const F=B*g;g+=b,s[i]+=F*N,s[(i+$)%n]+=F*R,i+=2}h.phases[0]=w/l,h.phases[1]=v/l;const W=1e-24;-1e-24<P&&P<W&&(P=0),-1e-24<B&&B<W&&(B=0),h.filterSample0=P,h.filterSample1=B}static harmonicsSynth(t,s,i,n,r,h,o){const a=o.harmonicsWave.getCustomWave(),l=+a.length-1,c=+Math.pow(2,(e.intervals[o.interval].offset+e.intervals[o.interval].spread)/12),f=Math.pow(2,(e.intervals[o.interval].offset-e.intervals[o.interval].spread)/12)*h.intervalMult,u=h.intervalVolumeMult*e.intervals[o.interval].sign;0!=o.interval||o.getChord().customInterval||(h.phases[1]=h.phases[0]);const p=f/c;let m=h.phaseDeltas[0]*c*l,d=m*p;const y=+h.phaseDeltaScale;let g=+h.volumeStart;const b=+h.volumeDelta;let w=h.phases[0]%1*l,v=h.phases[1]%1*l,M=+h.filter,k=o.getFilterIsFirstOrder()?1:M;const x=+h.filterScale,S=o.getFilterIsFirstOrder()?1:x,C=e.filterMaxResonance*Math.pow(Math.max(0,o.getFilterResonance()-1)/(e.filterResonanceRange-2),.5);let P=+h.filterSample0,B=+h.filterSample1;const E=0|w,T=0|v,F=E%l,O=T%l,D=w-E,A=v-T;let I=a[F],z=a[O];I+=(a[F+1]-I)*D,z+=(a[O+1]-z)*A;const L=i+r;i+=h.stereoOffset;const N=h.stereoVolume1,R=h.stereoVolume2,$=h.stereoDelay;for(;i<L;){w+=m,v+=d;const t=0|w,e=0|v,r=t%l,h=e%l;let o=a[r],c=a[h];const f=w-t,p=v-e;o+=(a[r+1]-o)*f,c+=(a[h+1]-c)*p;let E=(o-I)/m,T=(c-z)/d;I=o,z=c;P+=M*(E+T*u-P+(C+C/(1-M))*(P-B)),B+=k*(P-B),M*=x,k*=S,m*=y,d*=y;const F=B*g;g+=b,s[i]+=F*N,s[(i+$)%n]+=F*R,i+=2}h.phases[0]=w/l,h.phases[1]=v/l;const W=1e-24;-1e-24<P&&P<W&&(P=0),-1e-24<B&&B<W&&(B=0),h.filterSample0=P,h.filterSample1=B}static pulseWidthSynth(t,s,i,n,r,h,o){let a=h.phaseDeltas[0];const l=+h.phaseDeltaScale;let c=+h.volumeStart;const f=+h.volumeDelta;let u=h.phases[0]%1,p=h.pulseWidth;const m=h.pulseWidthDelta;let d=+h.filter,y=o.getFilterIsFirstOrder()?1:d;const g=+h.filterScale,b=o.getFilterIsFirstOrder()?1:g,w=e.filterMaxResonance*Math.pow(Math.max(0,o.getFilterResonance()-1)/(e.filterResonanceRange-2),.5);let v=+h.filterSample0,M=+h.filterSample1;const k=i+r;i+=h.stereoOffset;const x=h.stereoVolume1,S=h.stereoVolume2,C=h.stereoDelay;for(;i<k;){const t=u%1,e=(u+p)%1;let r=e-t;if(t<a)r+=.5*((P=t/a)+P-P*P-1);else if(t>1-a){r+=.5*((P=(t-1)/a)+P+P*P+1)}if(e<a)r-=.5*((P=e/a)+P-P*P-1);else if(e>1-a){var P;r-=.5*((P=(e-1)/a)+P+P*P+1)}v+=d*(r-v+(w+w/(1-d))*(v-M)),M+=y*(v-M),d*=g,y*=b,u+=a,a*=l,p+=m;const h=M*c;c+=f,s[i]+=h*x,s[(i+C)%n]+=h*S,i+=2}h.phases[0]=u;const B=1e-24;-1e-24<v&&v<B&&(v=0),-1e-24<M&&M<B&&(M=0),h.filterSample0=v,h.filterSample1=M}static noiseSynth(t,s,i,n,r,h,o){let a=o.getDrumWave(),l=+h.phaseDeltas[0];const c=+h.phaseDeltaScale;let f=+h.volumeStart;const u=+h.volumeDelta;let p=h.phases[0]%1*e.chipNoiseLength;0==h.phases[0]&&(p=Math.random()*e.chipNoiseLength);let m=+h.sample,d=+h.filter,y=o.getFilterIsFirstOrder()?1:d;const g=+h.filterScale,b=o.getFilterIsFirstOrder()?1:g,w=e.filterMaxResonance*Math.pow(Math.max(0,o.getFilterResonance()-1)/(e.filterResonanceRange-2),.5);let v=+h.filterSample0,M=+h.filterSample1;const k=Math.min(1,h.phaseDeltas[0]*e.chipNoises[o.chipNoise].pitchFilterMult),x=i+r;i+=h.stereoOffset;const S=h.stereoVolume1,C=h.stereoVolume2,P=h.stereoDelay;for(;i<x;){m+=(a[32767&p]-m)*k;v+=d*(m-v+(w+w/(1-d))*(v-M)),M+=y*(v-M),p+=l,d*=g,y*=b,l*=c;const t=M*f;f+=u,s[i]+=t*S,s[(i+P)%n]+=t*C,i+=2}h.phases[0]=p/e.chipNoiseLength,h.sample=m;const B=1e-24;-1e-24<v&&v<B&&(v=0),-1e-24<M&&M<B&&(M=0),h.filterSample0=v,h.filterSample1=M}static spectrumSynth(t,s,i,n,r,h,o){let a=o.getDrumWave(),l=128*h.phaseDeltas[0];const c=+h.phaseDeltaScale;let f=+h.volumeStart;const u=+h.volumeDelta;let p=+h.sample,m=+h.filter,d=o.getFilterIsFirstOrder()?1:m;const y=+h.filterScale,g=o.getFilterIsFirstOrder()?1:y,b=e.filterMaxResonance*Math.pow(Math.max(0,o.getFilterResonance()-1)/(e.filterResonanceRange-2),.5);let w=+h.filterSample0,v=+h.filterSample1,M=h.phases[0]%1*e.chipNoiseLength;0==h.phases[0]&&(M=Q.findRandomZeroCrossing(a)+l);const k=Math.min(1,l),x=i+r;i+=h.stereoOffset;const S=h.stereoVolume1,C=h.stereoVolume2,P=h.stereoDelay;for(;i<x;){const t=0|M,e=32767&t;let r=a[e];const h=M-t;r+=(a[e+1]-r)*h,p+=(r-p)*k;w+=m*(p-w+(b+b/(1-m))*(w-v)),v+=d*(w-v),M+=l,m*=y,d*=g,l*=c;const o=v*f;f+=u,s[i]+=o*S,s[(i+P)%n]+=o*C,i+=2}h.phases[0]=M/e.chipNoiseLength,h.sample=p;const B=1e-24;-1e-24<w&&w<B&&(w=0),-1e-24<v&&v<B&&(v=0),h.filterSample0=w,h.filterSample1=v}static drumsetSynth(t,s,i,n,r,h,o){let a=o.getDrumsetWave(h.drumsetPitch),l=h.phaseDeltas[0]/j.drumsetIndexReferenceDelta(h.drumsetPitch);const c=+h.phaseDeltaScale;let f=+h.volumeStart;const u=+h.volumeDelta;let p=+h.sample,m=+h.filter,d=o.getFilterIsFirstOrder()?1:m;const y=+h.filterScale,g=o.getFilterIsFirstOrder()?1:y,b=e.filterMaxResonance*Math.pow(Math.max(0,o.getFilterResonance()-1)/(e.filterResonanceRange-2),.5);let w=+h.filterSample0,v=+h.filterSample1,M=h.phases[0]%1*e.chipNoiseLength;0==h.phases[0]&&(M=Q.findRandomZeroCrossing(a)+l);const k=i+r;i+=h.stereoOffset;const x=h.stereoVolume1,S=h.stereoVolume2,C=h.stereoDelay;for(;i<k;){const t=0|M,e=32767&t;p=a[e];const r=M-t;p+=(a[e+1]-p)*r;w+=m*(p-w+(b+b/(1-m))*(w-v)),v+=d*(w-v),M+=l,m*=y,d*=g,l*=c;const h=v*f;f+=u,s[i]+=h*x,s[(i+C)%n]+=h*S,i+=2}h.phases[0]=M/e.chipNoiseLength,h.sample=p;const P=1e-24;-1e-24<w&&w<P&&(w=0),-1e-24<v&&v<P&&(v=0),h.filterSample0=w,h.filterSample1=v}static findRandomZeroCrossing(t){let s=Math.random()*e.chipNoiseLength,i=32767&s,n=t[i];for(let r=128;r>0;r--){const r=i+16&32767,h=t[r];if(n*h<=0){for(let r=0;r<16;r++){const r=i+1&32767,h=t[r];if(n*h<=0){const t=h-n;s=i,Math.abs(t)>1e-8&&(s+=-n/t),s=Math.max(0,s)%e.chipNoiseLength;break}i=r,n=h}break}i=r,n=h}return s}static instrumentVolumeToVolumeMult(t){return t==e.volumeRange-1?0:Math.pow(2,e.volumeLogScale*t)}static volumeMultToInstrumentVolume(t){return t<=0?e.volumeRange-1:Math.min(e.volumeRange-2,Math.log(t)/Math.LN2/e.volumeLogScale)}static expressionToVolumeMult(t){return Math.pow(Math.max(0,t)/3,1.5)}static volumeMultToExpression(t){return 3*Math.pow(Math.max(0,t),1/1.5)}getSamplesPerTick(){if(null==this.song)return 0;const t=this.song.getBeatsPerMinute()/60,s=e.partsPerBeat*t,i=e.ticksPerPart*s;return this.samplesPerSecond/i}}Q.fmSynthFunctionCache={},Q.fmSourceTemplate=("\n\t\t\tconst sineWave = beepbox.Config.sineWave;\n\t\t\t\n\t\t\tlet phaseDeltaScale = +tone.phaseDeltaScale;\n\t\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\n\t\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#];\n\t\t\tlet operator#OutputMult  = +tone.volumeStarts[#];\n\t\t\tconst operator#OutputDelta = +tone.volumeDeltas[#];\n\t\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n\t\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\t\tconst feedbackDelta        = +tone.feedbackDelta;\n\t\t\tlet volume = +tone.volumeStart;\n\t\t\tconst volumeDelta = +tone.volumeDelta;\n\t\t\t\n\t\t\tlet filter1 = +tone.filter;\n\t\t\tlet filter2 = instrument.getFilterIsFirstOrder() ? 1.0 : filter1;\n\t\t\tconst filterScale1 = +tone.filterScale;\n\t\t\tconst filterScale2 = instrument.getFilterIsFirstOrder() ? 1.0 : filterScale1;\n\t\t\tconst filterResonance = beepbox.Config.filterMaxResonance * Math.pow(Math.max(0, instrument.getFilterResonance() - 1) / (beepbox.Config.filterResonanceRange - 2), 0.5);\n\t\t\tlet filterSample0 = +tone.filterSample0;\n\t\t\tlet filterSample1 = +tone.filterSample1;\n\t\t\t\n\t\t\tconst stopIndex = stereoBufferIndex + runLength;\n\t\t\tstereoBufferIndex += tone.stereoOffset;\n\t\t\tconst stereoVolume1 = tone.stereoVolume1;\n\t\t\tconst stereoVolume2 = tone.stereoVolume2;\n\t\t\tconst stereoDelay = tone.stereoDelay;\n\t\t\twhile (stereoBufferIndex < stopIndex) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\t\tconst feedback = filterResonance + filterResonance / (1.0 - filter1);\n\t\t\t\tfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\n\t\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\t\toperator#PhaseDelta *= phaseDeltaScale;\n\t\t\t\tfilter1 *= filterScale1;\n\t\t\t\tfilter2 *= filterScale2;\n\t\t\t\t\n\t\t\t\tconst output = filterSample1 * volume;\n\t\t\t\tvolume += volumeDelta;\n\t\t\t\t\n\t\t\t\tdata[stereoBufferIndex] += output * stereoVolume1;\n\t\t\t\tdata[(stereoBufferIndex + stereoDelay) % stereoBufferLength] += output * stereoVolume2;\n\t\t\t\tstereoBufferIndex += 2;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / "+e.sineWaveLength+";\n\t\t\ttone.feedbackOutputs[#] = operator#Output;\n\t\t\t\n\t\t\tconst epsilon = (1.0e-24);\n\t\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\n\t\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\n\t\t\ttone.filterSample0 = filterSample0;\n\t\t\ttone.filterSample1 = filterSample1;\n\t\t").split("\n"),Q.operatorSourceTemplate=("\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & "+e.sineWaveMask+";\n\t\t\t\tconst operator#Sample   = sineWave[operator#Index];\n\t\t\t\toperator#Output       = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t").split("\n");const{a:q,button:_,div:J,h1:H,input:Z}=g,{svg:X,circle:Y,rect:tt,path:et}=b;document.head.appendChild(g.style({type:"text/css"},`\n\t\tbody {\n\t\t\tcolor: ${C.primaryText};\n\t\t\tbackground: ${C.editorBackground};\n\t\t}\n\t\th1 {\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 14px;\n\t\t\tline-height: 22px;\n\t\t\ttext-align: initial;\n\t\t\tmargin: 0;\n\t\t}\n\t\ta {\n\t\t\tfont-weight: bold;\n\t\t\tfont-size: 12px;\n\t\t\tline-height: 22px;\n\t\t\twhite-space: nowrap;\n\t\t\tcolor: ${C.linkAccent};\n\t\t}\n\t\tbutton {\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\tposition: relative;\n\t\t\tborder: none;\n\t\t\tborder-radius: 5px;\n\t\t\tbackground: ${C.uiWidgetBackground};\n\t\t\tcolor: ${C.primaryText};\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 14px;\n\t\t\tfont-family: inherit;\n\t\t}\n\t\tbutton:hover, button:focus {\n\t\t\tbackground: ${C.uiWidgetFocus};\n\t\t}\n\t\t.playButton, .pauseButton {\n\t\t\tpadding-left: 24px;\n\t\t\tpadding-right: 6px;\n\t\t}\n\t\t.playButton::before {\n\t\t\tcontent: "";\n\t\t\tposition: absolute;\n\t\t\tleft: 6px;\n\t\t\ttop: 50%;\n\t\t\tmargin-top: -6px;\n\t\t\twidth: 12px;\n\t\t\theight: 12px;\n\t\t\tpointer-events: none;\n\t\t\tbackground: ${C.primaryText};\n\t\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\t\t-webkit-mask-repeat: no-repeat;\n\t\t\t-webkit-mask-position: center;\n\t\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><path d="M 6 0 L -5 6 L -5 -6 z" fill="gray"/></svg>');\n\t\t\tmask-repeat: no-repeat;\n\t\t\tmask-position: center;\n\t\t}\n\t\t.pauseButton::before {\n\t\t\tcontent: "";\n\t\t\tposition: absolute;\n\t\t\tleft: 6px;\n\t\t\ttop: 50%;\n\t\t\tmargin-top: -6px;\n\t\t\twidth: 12px;\n\t\t\theight: 12px;\n\t\t\tpointer-events: none;\n\t\t\tbackground: ${C.primaryText};\n\t\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\t\t-webkit-mask-repeat: no-repeat;\n\t\t\t-webkit-mask-position: center;\n\t\t\tmask-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="-6 -6 12 12"><rect x="-5" y="-6" width="3" height="12" fill="gray"/><rect x="2"  y="-6" width="3" height="12" fill="gray"/></svg>');\n\t\t\tmask-repeat: no-repeat;\n\t\t\tmask-position: center;\n\t\t}\n\t\t\n\t\tinput[type=range] {\n\t\t\t-webkit-appearance: none;\n\t\t\tappearance: none;\n\t\t\theight: 16px;\n\t\t\tmargin: 0;\n\t\t\tcursor: pointer;\n\t\t\tbackground-color: ${C.editorBackground};\n\t\t\ttouch-action: pan-y;\n\t\t}\n\t\tinput[type=range]:focus {\n\t\t\toutline: none;\n\t\t}\n\t\tinput[type=range]::-webkit-slider-runnable-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${C.uiWidgetBackground};\n\t\t}\n\t\tinput[type=range]::-webkit-slider-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tbackground: ${C.primaryText};\n\t\t\tcursor: pointer;\n\t\t\t-webkit-appearance: none;\n\t\t\tmargin-top: -6px;\n\t\t}\n\t\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\n\t\t\tbackground: ${C.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-moz-range-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${C.uiWidgetBackground};\n\t\t}\n\t\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\n\t\t\tbackground: ${C.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-moz-range-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tborder: none;\n\t\t\tbackground: ${C.primaryText};\n\t\t\tcursor: pointer;\n\t\t}\n\t\tinput[type=range]::-ms-track {\n\t\t\twidth: 100%;\n\t\t\theight: 4px;\n\t\t\tcursor: pointer;\n\t\t\tbackground: ${C.uiWidgetBackground};\n\t\t\tborder-color: transparent;\n\t\t}\n\t\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\n\t\t\tbackground: ${C.uiWidgetFocus};\n\t\t}\n\t\tinput[type=range]::-ms-thumb {\n\t\t\theight: 16px;\n\t\t\twidth: 4px;\n\t\t\tborder-radius: 2px;\n\t\t\tbackground: ${C.primaryText};\n\t\t\tcursor: pointer;\n\t\t}\n\t`)),C.setTheme("dark classic");let st,it=null,nt=(4294967295*Math.random()>>>0).toString(16),rt=!1,ht=!1,ot=1;const at=new Q;let lt=H({style:"flex-grow: 1; margin: 0 1px;"},""),ct=q({target:"_top",style:"margin: 0 4px;"},"✎ Edit"),ft=q({href:"javascript:void(0)",style:"margin: 0 4px;"},"⎘ Copy URL"),ut=q({href:"javascript:void(0)",style:"margin: 0 4px;"},"⤳ Share"),pt=q({target:"_top",style:"margin: 0 4px;"},"⇱ Fullscreen"),mt=!1;const dt=_({style:"width: 100%; height: 100%; max-height: 50px;"}),yt=J({style:"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;"},dt),gt=et({d:"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z"}),bt=_({title:"loop",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},X({width:12,height:12,viewBox:"0 0 12 12"},gt)),wt=X({style:"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;",viewBox:"0 0 12 12"},et({fill:C.uiWidgetBackground,d:"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z"})),vt=Z({title:"volume",type:"range",value:75,min:0,max:100,step:1,style:"width: 12vw; max-width: 100px; margin: 0 1px;"}),Mt=X({width:12,height:12,viewBox:"0 0 12 12"},Y({cx:"5",cy:"5",r:"4.5","stroke-width":"1",stroke:"currentColor",fill:"none"}),et({stroke:"currentColor","stroke-width":"2",d:"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5",fill:"none"})),kt=_({title:"zoom",style:"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;"},Mt),xt=X({style:"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;"}),St=J({style:`position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${C.playhead}; pointer-events: none;`}),Ct=J({style:"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;"},xt,St),Pt=J({style:"display: flex; flex-grow: 1; flex-shrink: 1; height: 0; position: relative; align-items: center; overflow: hidden;"},Ct);function Bt(){let t=location.hash;if(it!=t&&""!=t){it=t,"#"==t.charAt(0)&&(t=t.substring(1)),pt.setAttribute("href",location.href);for(const e of t.split("&")){let s=e.indexOf("=");if(-1!=s){let t=e.substring(0,s),i=e.substring(s+1);switch(t){case"song":at.setSong(i),at.snapToStart(),ct.setAttribute("href","../#"+i);break;case"loop":at.loopRepeatCount="1"!=i?0:-1,$t()}}else at.setSong(t),at.snapToStart(),ct.setAttribute("href","../#"+t)}Lt()}}function Et(){at.playing&&(st=requestAnimationFrame(Et),localStorage.getItem("playerId")!=nt&&Tt(),zt()),rt!=at.playing&&Rt()}function Tt(){null!=at.song&&(null!=st&&cancelAnimationFrame(st),st=null,at.playing?at.pause():(at.play(),localStorage.setItem("playerId",nt),Et())),Rt()}function Ft(t){t.preventDefault(),Dt(t.clientX||t.pageX)}function Ot(t){Dt(t.touches[0].clientX)}function Dt(t){if(mt&&null!=at.song){const e=Pt.getBoundingClientRect();at.playhead=at.song.barCount*(t-e.left)/(e.right-e.left),zt()}}function At(){mt=!1}function It(){const t=+vt.value;at.volume=Math.min(1,Math.pow(t/50,.5))*Math.pow(2,(t-75)/25)}function zt(){if(null!=at.song){let t=at.playhead/at.song.barCount;St.style.left=ot*t+"px";const e=Pt.getBoundingClientRect();Pt.scrollLeft=t*(ot-e.width)}}function Lt(){if(xt.innerHTML="",null==at.song)return;const t=Pt.getBoundingClientRect();let s,i,n;if(ht){s=t.height,i=Math.max(e.windowOctaves,Math.min(e.pitchOctaves,Math.round(s/24))),n=12*i+1;const r=(s-1)/n,h=Math.max(8,4*r);ot=Math.max(t.width,h*at.song.barCount*at.song.beatsPerBar)}else{ot=t.width;const r=Math.max(1,ot/(at.song.barCount*at.song.beatsPerBar)/3);s=Math.min(t.height,r*(e.maxPitch+1)+1),i=Math.max(e.windowOctaves,Math.min(e.pitchOctaves,Math.round(s/(12*r)))),n=12*i+1}Ct.style.width=ot+"px",Ct.style.height=s+"px",xt.style.width=ot+"px",xt.style.height=s+"px";const r=ot/at.song.barCount,h=r/(at.song.beatsPerBar*e.partsPerBeat),o=(s-1)/n,a=(s-1)/e.drumCount;for(let t=0;t<at.song.barCount+1;t++){const e=t==at.song.loopStart||t==at.song.loopStart+at.song.loopLength?C.loopAccent:C.uiWidgetBackground;xt.appendChild(tt({x:t*r-1,y:0,width:2,height:s,fill:e}))}for(let t=0;t<=i;t++)xt.appendChild(tt({x:0,y:12*t*o,width:ot,height:o+1,fill:C.tonic,opacity:.75}));for(let t=at.song.channels.length-1;t>=0;t--){const n=at.song.getChannelIsNoise(t),l=n?a:o,c=at.song.channels[t].octave,f=(i-e.windowOctaves)/2,u=e.pitchOctaves-i,p=u/2;let m=c-e.scrollableOctaves/2;Math.abs(m)<=f?m=0:m<0?m+=f:m-=f;const d=Math.max(0,Math.min(u,Math.round(p+m)))*l*12+s-.5*l-.5;for(let e=0;e<at.song.barCount;e++){const s=at.song.getPattern(t,e);if(null==s)continue;const i=e*r;for(let e=0;e<s.notes.length;e++){const r=s.notes[e];for(const e of r.pitches){const s=Nt(e,r.start,r.pins,(l+1)/2,i,d,h,l),o=et({d:s,fill:C.getChannelColor(at.song,t).primaryChannel});n&&(o.style.opacity=String(.6)),xt.appendChild(o)}}}}zt()}function Nt(t,e,s,i,n,r,h,o){let a=`M ${n+h*(e+s[0].time)} ${r-t*o+i*(s[0].volume/3)} `;for(let l=0;l<s.length;l++){const c=s[l];a+=`L ${n+h*(e+c.time)} ${r-o*(t+c.interval)-i*(c.volume/3)} `}for(let l=s.length-1;l>=0;l--){const c=s[l];a+=`L ${n+h*(e+c.time)} ${r-o*(t+c.interval)+i*(c.volume/3)} `}return a}function Rt(){at.playing?(dt.classList.remove("playButton"),dt.classList.add("pauseButton"),dt.title="Pause (Space)",dt.innerText="Pause"):(dt.classList.remove("pauseButton"),dt.classList.add("playButton"),dt.title="Play (Space)",dt.innerText="Play"),rt=at.playing}function $t(){gt.setAttribute("fill",-1==at.loopRepeatCount?C.linkAccent:C.uiWidgetBackground)}function Wt(){Mt.style.color=ht?C.linkAccent:C.uiWidgetBackground}return document.body.appendChild(Pt),document.body.appendChild(J({style:"flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center;"},yt,bt,wt,vt,kt,lt,ct,ft,ut,pt)),top!==self?(ft.style.display="none",ut.style.display="none"):(pt.style.display="none","share"in navigator||(ut.style.display="none")),null!=localStorage.getItem("volume")&&(vt.value=localStorage.getItem("volume")),It(),window.addEventListener("resize",(function(){Lt()})),window.addEventListener("keydown",(function(t){switch(t.keyCode){case 32:Tt(),t.preventDefault();break;case 219:at.prevBar(),zt(),t.preventDefault();break;case 221:at.nextBar(),zt(),t.preventDefault()}})),xt.addEventListener("mousedown",(function(t){mt=!0,Ft(t)})),window.addEventListener("mousemove",Ft),window.addEventListener("mouseup",At),xt.addEventListener("touchstart",(function(t){mt=!0,Ot(t)})),xt.addEventListener("touchmove",Ot),xt.addEventListener("touchend",At),xt.addEventListener("touchcancel",At),dt.addEventListener("click",Tt),bt.addEventListener("click",(function(){-1==at.loopRepeatCount?at.loopRepeatCount=0:at.loopRepeatCount=-1,$t()})),vt.addEventListener("input",(function(){localStorage.setItem("volume",vt.value),It()})),kt.addEventListener("click",(function(){ht=!ht,Wt(),Lt()})),ft.addEventListener("click",(function(){if(navigator.clipboard&&navigator.clipboard.writeText)return void navigator.clipboard.writeText(location.href).catch((()=>{window.prompt("Copy to clipboard:",location.href)}));const t=document.createElement("textarea");t.innerText=location.href,document.body.appendChild(t),t.select();const e=document.execCommand("copy");t.remove(),e||window.prompt("Copy this:",location.href)})),ut.addEventListener("click",(function(){navigator.share({url:location.href})})),window.addEventListener("hashchange",Bt),Bt(),$t(),Wt(),Rt(),t.Channel=K,t.Config=e,t.Instrument=j,t.Note=N,t.Pattern=R,t.Synth=Q,Object.defineProperty(t,"R",{value:!0}),t}({});
//# sourceMappingURL=beepbox_player.min.js.map